// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geobuf.proto

package org.maptalks.benchmark.geo;

public final class Geobuf {
  private Geobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * global arrays of unique keys
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     */
    java.util.List<java.lang.String>
        getKeysList();
    /**
     * <pre>
     * global arrays of unique keys
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     */
    int getKeysCount();
    /**
     * <pre>
     * global arrays of unique keys
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     */
    java.lang.String getKeys(int index);
    /**
     * <pre>
     * global arrays of unique keys
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeysBytes(int index);

    /**
     * <pre>
     * max coordinate dimensions
     * </pre>
     *
     * <code>optional uint32 dimensions = 2 [default = 2];</code>
     */
    boolean hasDimensions();
    /**
     * <pre>
     * max coordinate dimensions
     * </pre>
     *
     * <code>optional uint32 dimensions = 2 [default = 2];</code>
     */
    int getDimensions();

    /**
     * <pre>
     * number of digits after decimal point for coordinates
     * </pre>
     *
     * <code>optional uint32 precision = 3 [default = 6];</code>
     */
    boolean hasPrecision();
    /**
     * <pre>
     * number of digits after decimal point for coordinates
     * </pre>
     *
     * <code>optional uint32 precision = 3 [default = 6];</code>
     */
    int getPrecision();

    /**
     * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
     */
    boolean hasFeatureCollection();
    /**
     * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
     */
    org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection getFeatureCollection();
    /**
     * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
     */
    org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollectionOrBuilder getFeatureCollectionOrBuilder();

    /**
     * <code>optional .Data.Feature feature = 5;</code>
     */
    boolean hasFeature();
    /**
     * <code>optional .Data.Feature feature = 5;</code>
     */
    org.maptalks.benchmark.geo.Geobuf.Data.Feature getFeature();
    /**
     * <code>optional .Data.Feature feature = 5;</code>
     */
    org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder getFeatureOrBuilder();

    /**
     * <code>optional .Data.Geometry geometry = 6;</code>
     */
    boolean hasGeometry();
    /**
     * <code>optional .Data.Geometry geometry = 6;</code>
     */
    org.maptalks.benchmark.geo.Geobuf.Data.Geometry getGeometry();
    /**
     * <code>optional .Data.Geometry geometry = 6;</code>
     */
    org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder getGeometryOrBuilder();

    public org.maptalks.benchmark.geo.Geobuf.Data.DataTypeCase getDataTypeCase();
  }
  /**
   * Protobuf type {@code Data}
   */
  public  static final class Data extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Data)
      DataOrBuilder {
    // Use Data.newBuilder() to construct.
    private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Data() {
      keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      dimensions_ = 2;
      precision_ = 6;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                keys_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              keys_.add(bs);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              dimensions_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              precision_ = input.readUInt32();
              break;
            }
            case 34: {
              org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.Builder subBuilder = null;
              if (dataTypeCase_ == 4) {
                subBuilder = ((org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_).toBuilder();
              }
              dataType_ =
                  input.readMessage(org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_);
                dataType_ = subBuilder.buildPartial();
              }
              dataTypeCase_ = 4;
              break;
            }
            case 42: {
              org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder subBuilder = null;
              if (dataTypeCase_ == 5) {
                subBuilder = ((org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_).toBuilder();
              }
              dataType_ =
                  input.readMessage(org.maptalks.benchmark.geo.Geobuf.Data.Feature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_);
                dataType_ = subBuilder.buildPartial();
              }
              dataTypeCase_ = 5;
              break;
            }
            case 50: {
              org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder subBuilder = null;
              if (dataTypeCase_ == 6) {
                subBuilder = ((org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_).toBuilder();
              }
              dataType_ =
                  input.readMessage(org.maptalks.benchmark.geo.Geobuf.Data.Geometry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_);
                dataType_ = subBuilder.buildPartial();
              }
              dataTypeCase_ = 6;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          keys_ = keys_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.maptalks.benchmark.geo.Geobuf.Data.class, org.maptalks.benchmark.geo.Geobuf.Data.Builder.class);
    }

    public interface FeatureOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Data.Feature)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required .Data.Geometry geometry = 1;</code>
       */
      boolean hasGeometry();
      /**
       * <code>required .Data.Geometry geometry = 1;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.Geometry getGeometry();
      /**
       * <code>required .Data.Geometry geometry = 1;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder getGeometryOrBuilder();

      /**
       * <code>optional string id = 11;</code>
       */
      boolean hasId();
      /**
       * <code>optional string id = 11;</code>
       */
      java.lang.String getId();
      /**
       * <code>optional string id = 11;</code>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <code>optional sint64 int_id = 12;</code>
       */
      boolean hasIntId();
      /**
       * <code>optional sint64 int_id = 12;</code>
       */
      long getIntId();

      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> 
          getValuesList();
      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.Value getValues(int index);
      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      int getValuesCount();
      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
          getValuesOrBuilderList();
      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder getValuesOrBuilder(
          int index);

      /**
       * <pre>
       * pairs of key/value indexes
       * </pre>
       *
       * <code>repeated uint32 properties = 14 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getPropertiesList();
      /**
       * <pre>
       * pairs of key/value indexes
       * </pre>
       *
       * <code>repeated uint32 properties = 14 [packed = true];</code>
       */
      int getPropertiesCount();
      /**
       * <pre>
       * pairs of key/value indexes
       * </pre>
       *
       * <code>repeated uint32 properties = 14 [packed = true];</code>
       */
      int getProperties(int index);

      /**
       * <pre>
       * arbitrary properties
       * </pre>
       *
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getCustomPropertiesList();
      /**
       * <pre>
       * arbitrary properties
       * </pre>
       *
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      int getCustomPropertiesCount();
      /**
       * <pre>
       * arbitrary properties
       * </pre>
       *
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      int getCustomProperties(int index);

      public org.maptalks.benchmark.geo.Geobuf.Data.Feature.IdTypeCase getIdTypeCase();
    }
    /**
     * Protobuf type {@code Data.Feature}
     */
    public  static final class Feature extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Data.Feature)
        FeatureOrBuilder {
      // Use Feature.newBuilder() to construct.
      private Feature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Feature() {
        values_ = java.util.Collections.emptyList();
        properties_ = java.util.Collections.emptyList();
        customProperties_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Feature(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = geometry_.toBuilder();
                }
                geometry_ = input.readMessage(org.maptalks.benchmark.geo.Geobuf.Data.Geometry.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(geometry_);
                  geometry_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 90: {
                com.google.protobuf.ByteString bs = input.readBytes();
                idTypeCase_ = 11;
                idType_ = bs;
                break;
              }
              case 96: {
                idTypeCase_ = 12;
                idType_ = input.readSInt64();
                break;
              }
              case 106: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  values_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Value>();
                  mutable_bitField0_ |= 0x00000008;
                }
                values_.add(
                    input.readMessage(org.maptalks.benchmark.geo.Geobuf.Data.Value.PARSER, extensionRegistry));
                break;
              }
              case 112: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  properties_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000010;
                }
                properties_.add(input.readUInt32());
                break;
              }
              case 114: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  properties_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  properties_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 120: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  customProperties_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                customProperties_.add(input.readUInt32());
                break;
              }
              case 122: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                  customProperties_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                while (input.getBytesUntilLimit() > 0) {
                  customProperties_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            values_ = java.util.Collections.unmodifiableList(values_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            properties_ = java.util.Collections.unmodifiableList(properties_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            customProperties_ = java.util.Collections.unmodifiableList(customProperties_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Feature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Feature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maptalks.benchmark.geo.Geobuf.Data.Feature.class, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder.class);
      }

      private int bitField0_;
      private int idTypeCase_ = 0;
      private java.lang.Object idType_;
      public enum IdTypeCase
          implements com.google.protobuf.Internal.EnumLite {
        ID(11),
        INT_ID(12),
        IDTYPE_NOT_SET(0);
        private final int value;
        private IdTypeCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static IdTypeCase valueOf(int value) {
          return forNumber(value);
        }

        public static IdTypeCase forNumber(int value) {
          switch (value) {
            case 11: return ID;
            case 12: return INT_ID;
            case 0: return IDTYPE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public IdTypeCase
      getIdTypeCase() {
        return IdTypeCase.forNumber(
            idTypeCase_);
      }

      public static final int GEOMETRY_FIELD_NUMBER = 1;
      private org.maptalks.benchmark.geo.Geobuf.Data.Geometry geometry_;
      /**
       * <code>required .Data.Geometry geometry = 1;</code>
       */
      public boolean hasGeometry() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Data.Geometry geometry = 1;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Geometry getGeometry() {
        return geometry_ == null ? org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance() : geometry_;
      }
      /**
       * <code>required .Data.Geometry geometry = 1;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder getGeometryOrBuilder() {
        return geometry_ == null ? org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance() : geometry_;
      }

      public static final int ID_FIELD_NUMBER = 11;
      /**
       * <code>optional string id = 11;</code>
       */
      public boolean hasId() {
        return idTypeCase_ == 11;
      }
      /**
       * <code>optional string id = 11;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = "";
        if (idTypeCase_ == 11) {
          ref = idType_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8() && (idTypeCase_ == 11)) {
            idType_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string id = 11;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = "";
        if (idTypeCase_ == 11) {
          ref = idType_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (idTypeCase_ == 11) {
            idType_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int INT_ID_FIELD_NUMBER = 12;
      /**
       * <code>optional sint64 int_id = 12;</code>
       */
      public boolean hasIntId() {
        return idTypeCase_ == 12;
      }
      /**
       * <code>optional sint64 int_id = 12;</code>
       */
      public long getIntId() {
        if (idTypeCase_ == 12) {
          return (java.lang.Long) idType_;
        }
        return 0L;
      }

      public static final int VALUES_FIELD_NUMBER = 13;
      private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> values_;
      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> getValuesList() {
        return values_;
      }
      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
          getValuesOrBuilderList() {
        return values_;
      }
      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Value getValues(int index) {
        return values_.get(index);
      }
      /**
       * <pre>
       * unique values
       * </pre>
       *
       * <code>repeated .Data.Value values = 13;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder getValuesOrBuilder(
          int index) {
        return values_.get(index);
      }

      public static final int PROPERTIES_FIELD_NUMBER = 14;
      private java.util.List<java.lang.Integer> properties_;
      /**
       * <pre>
       * pairs of key/value indexes
       * </pre>
       *
       * <code>repeated uint32 properties = 14 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPropertiesList() {
        return properties_;
      }
      /**
       * <pre>
       * pairs of key/value indexes
       * </pre>
       *
       * <code>repeated uint32 properties = 14 [packed = true];</code>
       */
      public int getPropertiesCount() {
        return properties_.size();
      }
      /**
       * <pre>
       * pairs of key/value indexes
       * </pre>
       *
       * <code>repeated uint32 properties = 14 [packed = true];</code>
       */
      public int getProperties(int index) {
        return properties_.get(index);
      }
      private int propertiesMemoizedSerializedSize = -1;

      public static final int CUSTOM_PROPERTIES_FIELD_NUMBER = 15;
      private java.util.List<java.lang.Integer> customProperties_;
      /**
       * <pre>
       * arbitrary properties
       * </pre>
       *
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getCustomPropertiesList() {
        return customProperties_;
      }
      /**
       * <pre>
       * arbitrary properties
       * </pre>
       *
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      public int getCustomPropertiesCount() {
        return customProperties_.size();
      }
      /**
       * <pre>
       * arbitrary properties
       * </pre>
       *
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      public int getCustomProperties(int index) {
        return customProperties_.get(index);
      }
      private int customPropertiesMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasGeometry()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getGeometry().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, getGeometry());
        }
        if (idTypeCase_ == 11) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 11, idType_);
        }
        if (idTypeCase_ == 12) {
          output.writeSInt64(
              12, (long)((java.lang.Long) idType_));
        }
        for (int i = 0; i < values_.size(); i++) {
          output.writeMessage(13, values_.get(i));
        }
        if (getPropertiesList().size() > 0) {
          output.writeUInt32NoTag(114);
          output.writeUInt32NoTag(propertiesMemoizedSerializedSize);
        }
        for (int i = 0; i < properties_.size(); i++) {
          output.writeUInt32NoTag(properties_.get(i));
        }
        if (getCustomPropertiesList().size() > 0) {
          output.writeUInt32NoTag(122);
          output.writeUInt32NoTag(customPropertiesMemoizedSerializedSize);
        }
        for (int i = 0; i < customProperties_.size(); i++) {
          output.writeUInt32NoTag(customProperties_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getGeometry());
        }
        if (idTypeCase_ == 11) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, idType_);
        }
        if (idTypeCase_ == 12) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(
                12, (long)((java.lang.Long) idType_));
        }
        for (int i = 0; i < values_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, values_.get(i));
        }
        {
          int dataSize = 0;
          for (int i = 0; i < properties_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(properties_.get(i));
          }
          size += dataSize;
          if (!getPropertiesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          propertiesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < customProperties_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(customProperties_.get(i));
          }
          size += dataSize;
          if (!getCustomPropertiesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          customPropertiesMemoizedSerializedSize = dataSize;
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.maptalks.benchmark.geo.Geobuf.Data.Feature)) {
          return super.equals(obj);
        }
        org.maptalks.benchmark.geo.Geobuf.Data.Feature other = (org.maptalks.benchmark.geo.Geobuf.Data.Feature) obj;

        boolean result = true;
        result = result && (hasGeometry() == other.hasGeometry());
        if (hasGeometry()) {
          result = result && getGeometry()
              .equals(other.getGeometry());
        }
        result = result && getValuesList()
            .equals(other.getValuesList());
        result = result && getPropertiesList()
            .equals(other.getPropertiesList());
        result = result && getCustomPropertiesList()
            .equals(other.getCustomPropertiesList());
        result = result && getIdTypeCase().equals(
            other.getIdTypeCase());
        if (!result) return false;
        switch (idTypeCase_) {
          case 11:
            result = result && getId()
                .equals(other.getId());
            break;
          case 12:
            result = result && (getIntId()
                == other.getIntId());
            break;
          case 0:
          default:
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasGeometry()) {
          hash = (37 * hash) + GEOMETRY_FIELD_NUMBER;
          hash = (53 * hash) + getGeometry().hashCode();
        }
        if (getValuesCount() > 0) {
          hash = (37 * hash) + VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getValuesList().hashCode();
        }
        if (getPropertiesCount() > 0) {
          hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getPropertiesList().hashCode();
        }
        if (getCustomPropertiesCount() > 0) {
          hash = (37 * hash) + CUSTOM_PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getCustomPropertiesList().hashCode();
        }
        switch (idTypeCase_) {
          case 11:
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId().hashCode();
            break;
          case 12:
            hash = (37 * hash) + INT_ID_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getIntId());
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.maptalks.benchmark.geo.Geobuf.Data.Feature prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Data.Feature}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Data.Feature)
          org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Feature_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Feature_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.maptalks.benchmark.geo.Geobuf.Data.Feature.class, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder.class);
        }

        // Construct using org.maptalks.benchmark.geo.Geobuf.Data.Feature.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getGeometryFieldBuilder();
            getValuesFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (geometryBuilder_ == null) {
            geometry_ = null;
          } else {
            geometryBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (valuesBuilder_ == null) {
            values_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            valuesBuilder_.clear();
          }
          properties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          customProperties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          idTypeCase_ = 0;
          idType_ = null;
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Feature_descriptor;
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.Feature getDefaultInstanceForType() {
          return org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance();
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.Feature build() {
          org.maptalks.benchmark.geo.Geobuf.Data.Feature result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.Feature buildPartial() {
          org.maptalks.benchmark.geo.Geobuf.Data.Feature result = new org.maptalks.benchmark.geo.Geobuf.Data.Feature(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (geometryBuilder_ == null) {
            result.geometry_ = geometry_;
          } else {
            result.geometry_ = geometryBuilder_.build();
          }
          if (idTypeCase_ == 11) {
            result.idType_ = idType_;
          }
          if (idTypeCase_ == 12) {
            result.idType_ = idType_;
          }
          if (valuesBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              values_ = java.util.Collections.unmodifiableList(values_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.values_ = values_;
          } else {
            result.values_ = valuesBuilder_.build();
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            properties_ = java.util.Collections.unmodifiableList(properties_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.properties_ = properties_;
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            customProperties_ = java.util.Collections.unmodifiableList(customProperties_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.customProperties_ = customProperties_;
          result.bitField0_ = to_bitField0_;
          result.idTypeCase_ = idTypeCase_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.maptalks.benchmark.geo.Geobuf.Data.Feature) {
            return mergeFrom((org.maptalks.benchmark.geo.Geobuf.Data.Feature)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.maptalks.benchmark.geo.Geobuf.Data.Feature other) {
          if (other == org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance()) return this;
          if (other.hasGeometry()) {
            mergeGeometry(other.getGeometry());
          }
          if (valuesBuilder_ == null) {
            if (!other.values_.isEmpty()) {
              if (values_.isEmpty()) {
                values_ = other.values_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureValuesIsMutable();
                values_.addAll(other.values_);
              }
              onChanged();
            }
          } else {
            if (!other.values_.isEmpty()) {
              if (valuesBuilder_.isEmpty()) {
                valuesBuilder_.dispose();
                valuesBuilder_ = null;
                values_ = other.values_;
                bitField0_ = (bitField0_ & ~0x00000008);
                valuesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getValuesFieldBuilder() : null;
              } else {
                valuesBuilder_.addAllMessages(other.values_);
              }
            }
          }
          if (!other.properties_.isEmpty()) {
            if (properties_.isEmpty()) {
              properties_ = other.properties_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePropertiesIsMutable();
              properties_.addAll(other.properties_);
            }
            onChanged();
          }
          if (!other.customProperties_.isEmpty()) {
            if (customProperties_.isEmpty()) {
              customProperties_ = other.customProperties_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCustomPropertiesIsMutable();
              customProperties_.addAll(other.customProperties_);
            }
            onChanged();
          }
          switch (other.getIdTypeCase()) {
            case ID: {
              idTypeCase_ = 11;
              idType_ = other.idType_;
              onChanged();
              break;
            }
            case INT_ID: {
              setIntId(other.getIntId());
              break;
            }
            case IDTYPE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          if (!hasGeometry()) {
            return false;
          }
          if (!getGeometry().isInitialized()) {
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.maptalks.benchmark.geo.Geobuf.Data.Feature parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.maptalks.benchmark.geo.Geobuf.Data.Feature) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int idTypeCase_ = 0;
        private java.lang.Object idType_;
        public IdTypeCase
            getIdTypeCase() {
          return IdTypeCase.forNumber(
              idTypeCase_);
        }

        public Builder clearIdType() {
          idTypeCase_ = 0;
          idType_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        private org.maptalks.benchmark.geo.Geobuf.Data.Geometry geometry_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Geometry, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder, org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder> geometryBuilder_;
        /**
         * <code>required .Data.Geometry geometry = 1;</code>
         */
        public boolean hasGeometry() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .Data.Geometry geometry = 1;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry getGeometry() {
          if (geometryBuilder_ == null) {
            return geometry_ == null ? org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance() : geometry_;
          } else {
            return geometryBuilder_.getMessage();
          }
        }
        /**
         * <code>required .Data.Geometry geometry = 1;</code>
         */
        public Builder setGeometry(org.maptalks.benchmark.geo.Geobuf.Data.Geometry value) {
          if (geometryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            geometry_ = value;
            onChanged();
          } else {
            geometryBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .Data.Geometry geometry = 1;</code>
         */
        public Builder setGeometry(
            org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder builderForValue) {
          if (geometryBuilder_ == null) {
            geometry_ = builderForValue.build();
            onChanged();
          } else {
            geometryBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .Data.Geometry geometry = 1;</code>
         */
        public Builder mergeGeometry(org.maptalks.benchmark.geo.Geobuf.Data.Geometry value) {
          if (geometryBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                geometry_ != null &&
                geometry_ != org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance()) {
              geometry_ =
                org.maptalks.benchmark.geo.Geobuf.Data.Geometry.newBuilder(geometry_).mergeFrom(value).buildPartial();
            } else {
              geometry_ = value;
            }
            onChanged();
          } else {
            geometryBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .Data.Geometry geometry = 1;</code>
         */
        public Builder clearGeometry() {
          if (geometryBuilder_ == null) {
            geometry_ = null;
            onChanged();
          } else {
            geometryBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>required .Data.Geometry geometry = 1;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder getGeometryBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getGeometryFieldBuilder().getBuilder();
        }
        /**
         * <code>required .Data.Geometry geometry = 1;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder getGeometryOrBuilder() {
          if (geometryBuilder_ != null) {
            return geometryBuilder_.getMessageOrBuilder();
          } else {
            return geometry_ == null ?
                org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance() : geometry_;
          }
        }
        /**
         * <code>required .Data.Geometry geometry = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Geometry, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder, org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder> 
            getGeometryFieldBuilder() {
          if (geometryBuilder_ == null) {
            geometryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.maptalks.benchmark.geo.Geobuf.Data.Geometry, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder, org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder>(
                    getGeometry(),
                    getParentForChildren(),
                    isClean());
            geometry_ = null;
          }
          return geometryBuilder_;
        }

        /**
         * <code>optional string id = 11;</code>
         */
        public boolean hasId() {
          return idTypeCase_ == 11;
        }
        /**
         * <code>optional string id = 11;</code>
         */
        public java.lang.String getId() {
          java.lang.Object ref = "";
          if (idTypeCase_ == 11) {
            ref = idType_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (idTypeCase_ == 11) {
              if (bs.isValidUtf8()) {
                idType_ = s;
              }
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string id = 11;</code>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = "";
          if (idTypeCase_ == 11) {
            ref = idType_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (idTypeCase_ == 11) {
              idType_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string id = 11;</code>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  idTypeCase_ = 11;
          idType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 11;</code>
         */
        public Builder clearId() {
          if (idTypeCase_ == 11) {
            idTypeCase_ = 0;
            idType_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional string id = 11;</code>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  idTypeCase_ = 11;
          idType_ = value;
          onChanged();
          return this;
        }

        /**
         * <code>optional sint64 int_id = 12;</code>
         */
        public boolean hasIntId() {
          return idTypeCase_ == 12;
        }
        /**
         * <code>optional sint64 int_id = 12;</code>
         */
        public long getIntId() {
          if (idTypeCase_ == 12) {
            return (java.lang.Long) idType_;
          }
          return 0L;
        }
        /**
         * <code>optional sint64 int_id = 12;</code>
         */
        public Builder setIntId(long value) {
          idTypeCase_ = 12;
          idType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint64 int_id = 12;</code>
         */
        public Builder clearIntId() {
          if (idTypeCase_ == 12) {
            idTypeCase_ = 0;
            idType_ = null;
            onChanged();
          }
          return this;
        }

        private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> values_ =
          java.util.Collections.emptyList();
        private void ensureValuesIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            values_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Value>(values_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Value, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder, org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> valuesBuilder_;

        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> getValuesList() {
          if (valuesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(values_);
          } else {
            return valuesBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public int getValuesCount() {
          if (valuesBuilder_ == null) {
            return values_.size();
          } else {
            return valuesBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value getValues(int index) {
          if (valuesBuilder_ == null) {
            return values_.get(index);
          } else {
            return valuesBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder setValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.set(index, value);
            onChanged();
          } else {
            valuesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder setValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.set(index, builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(org.maptalks.benchmark.geo.Geobuf.Data.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.add(value);
            onChanged();
          } else {
            valuesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.add(index, value);
            onChanged();
          } else {
            valuesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(
            org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.add(builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.add(index, builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addAllValues(
            java.lang.Iterable<? extends org.maptalks.benchmark.geo.Geobuf.Data.Value> values) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, values_);
            onChanged();
          } else {
            valuesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder clearValues() {
          if (valuesBuilder_ == null) {
            values_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            valuesBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder removeValues(int index) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.remove(index);
            onChanged();
          } else {
            valuesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder getValuesBuilder(
            int index) {
          return getValuesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder getValuesOrBuilder(
            int index) {
          if (valuesBuilder_ == null) {
            return values_.get(index);  } else {
            return valuesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
             getValuesOrBuilderList() {
          if (valuesBuilder_ != null) {
            return valuesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(values_);
          }
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder addValuesBuilder() {
          return getValuesFieldBuilder().addBuilder(
              org.maptalks.benchmark.geo.Geobuf.Data.Value.getDefaultInstance());
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder addValuesBuilder(
            int index) {
          return getValuesFieldBuilder().addBuilder(
              index, org.maptalks.benchmark.geo.Geobuf.Data.Value.getDefaultInstance());
        }
        /**
         * <pre>
         * unique values
         * </pre>
         *
         * <code>repeated .Data.Value values = 13;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder> 
             getValuesBuilderList() {
          return getValuesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Value, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder, org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
            getValuesFieldBuilder() {
          if (valuesBuilder_ == null) {
            valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.maptalks.benchmark.geo.Geobuf.Data.Value, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder, org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder>(
                    values_,
                    ((bitField0_ & 0x00000008) == 0x00000008),
                    getParentForChildren(),
                    isClean());
            values_ = null;
          }
          return valuesBuilder_;
        }

        private java.util.List<java.lang.Integer> properties_ = java.util.Collections.emptyList();
        private void ensurePropertiesIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            properties_ = new java.util.ArrayList<java.lang.Integer>(properties_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <pre>
         * pairs of key/value indexes
         * </pre>
         *
         * <code>repeated uint32 properties = 14 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getPropertiesList() {
          return java.util.Collections.unmodifiableList(properties_);
        }
        /**
         * <pre>
         * pairs of key/value indexes
         * </pre>
         *
         * <code>repeated uint32 properties = 14 [packed = true];</code>
         */
        public int getPropertiesCount() {
          return properties_.size();
        }
        /**
         * <pre>
         * pairs of key/value indexes
         * </pre>
         *
         * <code>repeated uint32 properties = 14 [packed = true];</code>
         */
        public int getProperties(int index) {
          return properties_.get(index);
        }
        /**
         * <pre>
         * pairs of key/value indexes
         * </pre>
         *
         * <code>repeated uint32 properties = 14 [packed = true];</code>
         */
        public Builder setProperties(
            int index, int value) {
          ensurePropertiesIsMutable();
          properties_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * pairs of key/value indexes
         * </pre>
         *
         * <code>repeated uint32 properties = 14 [packed = true];</code>
         */
        public Builder addProperties(int value) {
          ensurePropertiesIsMutable();
          properties_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * pairs of key/value indexes
         * </pre>
         *
         * <code>repeated uint32 properties = 14 [packed = true];</code>
         */
        public Builder addAllProperties(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePropertiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, properties_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * pairs of key/value indexes
         * </pre>
         *
         * <code>repeated uint32 properties = 14 [packed = true];</code>
         */
        public Builder clearProperties() {
          properties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> customProperties_ = java.util.Collections.emptyList();
        private void ensureCustomPropertiesIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            customProperties_ = new java.util.ArrayList<java.lang.Integer>(customProperties_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <pre>
         * arbitrary properties
         * </pre>
         *
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getCustomPropertiesList() {
          return java.util.Collections.unmodifiableList(customProperties_);
        }
        /**
         * <pre>
         * arbitrary properties
         * </pre>
         *
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public int getCustomPropertiesCount() {
          return customProperties_.size();
        }
        /**
         * <pre>
         * arbitrary properties
         * </pre>
         *
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public int getCustomProperties(int index) {
          return customProperties_.get(index);
        }
        /**
         * <pre>
         * arbitrary properties
         * </pre>
         *
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder setCustomProperties(
            int index, int value) {
          ensureCustomPropertiesIsMutable();
          customProperties_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * arbitrary properties
         * </pre>
         *
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder addCustomProperties(int value) {
          ensureCustomPropertiesIsMutable();
          customProperties_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * arbitrary properties
         * </pre>
         *
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder addAllCustomProperties(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCustomPropertiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, customProperties_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * arbitrary properties
         * </pre>
         *
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder clearCustomProperties() {
          customProperties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Data.Feature)
      }

      // @@protoc_insertion_point(class_scope:Data.Feature)
      private static final org.maptalks.benchmark.geo.Geobuf.Data.Feature DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.maptalks.benchmark.geo.Geobuf.Data.Feature();
      }

      public static org.maptalks.benchmark.geo.Geobuf.Data.Feature getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Feature>
          PARSER = new com.google.protobuf.AbstractParser<Feature>() {
        public Feature parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Feature(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Feature> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Feature> getParserForType() {
        return PARSER;
      }

      public org.maptalks.benchmark.geo.Geobuf.Data.Feature getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GeometryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Data.Geometry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required .Data.Geometry.Type type = 1;</code>
       */
      boolean hasType();
      /**
       * <code>required .Data.Geometry.Type type = 1;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type getType();

      /**
       * <pre>
       * coordinate structure in lengths
       * </pre>
       *
       * <code>repeated uint32 lengths = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getLengthsList();
      /**
       * <pre>
       * coordinate structure in lengths
       * </pre>
       *
       * <code>repeated uint32 lengths = 2 [packed = true];</code>
       */
      int getLengthsCount();
      /**
       * <pre>
       * coordinate structure in lengths
       * </pre>
       *
       * <code>repeated uint32 lengths = 2 [packed = true];</code>
       */
      int getLengths(int index);

      /**
       * <pre>
       * delta-encoded integer values
       * </pre>
       *
       * <code>repeated sint64 coords = 3 [packed = true];</code>
       */
      java.util.List<java.lang.Long> getCoordsList();
      /**
       * <pre>
       * delta-encoded integer values
       * </pre>
       *
       * <code>repeated sint64 coords = 3 [packed = true];</code>
       */
      int getCoordsCount();
      /**
       * <pre>
       * delta-encoded integer values
       * </pre>
       *
       * <code>repeated sint64 coords = 3 [packed = true];</code>
       */
      long getCoords(int index);

      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Geometry> 
          getGeometriesList();
      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.Geometry getGeometries(int index);
      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      int getGeometriesCount();
      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder> 
          getGeometriesOrBuilderList();
      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder getGeometriesOrBuilder(
          int index);

      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> 
          getValuesList();
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.Value getValues(int index);
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      int getValuesCount();
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
          getValuesOrBuilderList();
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder getValuesOrBuilder(
          int index);

      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getCustomPropertiesList();
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      int getCustomPropertiesCount();
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      int getCustomProperties(int index);
    }
    /**
     * Protobuf type {@code Data.Geometry}
     */
    public  static final class Geometry extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Data.Geometry)
        GeometryOrBuilder {
      // Use Geometry.newBuilder() to construct.
      private Geometry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Geometry() {
        type_ = 0;
        lengths_ = java.util.Collections.emptyList();
        coords_ = java.util.Collections.emptyList();
        geometries_ = java.util.Collections.emptyList();
        values_ = java.util.Collections.emptyList();
        customProperties_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Geometry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type value = org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  type_ = rawValue;
                }
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  lengths_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                lengths_.add(input.readUInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  lengths_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  lengths_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  coords_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000004;
                }
                coords_.add(input.readSInt64());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  coords_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  coords_.add(input.readSInt64());
                }
                input.popLimit(limit);
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  geometries_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Geometry>();
                  mutable_bitField0_ |= 0x00000008;
                }
                geometries_.add(
                    input.readMessage(org.maptalks.benchmark.geo.Geobuf.Data.Geometry.PARSER, extensionRegistry));
                break;
              }
              case 106: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  values_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Value>();
                  mutable_bitField0_ |= 0x00000010;
                }
                values_.add(
                    input.readMessage(org.maptalks.benchmark.geo.Geobuf.Data.Value.PARSER, extensionRegistry));
                break;
              }
              case 120: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  customProperties_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                customProperties_.add(input.readUInt32());
                break;
              }
              case 122: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                  customProperties_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                while (input.getBytesUntilLimit() > 0) {
                  customProperties_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            lengths_ = java.util.Collections.unmodifiableList(lengths_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            coords_ = java.util.Collections.unmodifiableList(coords_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            geometries_ = java.util.Collections.unmodifiableList(geometries_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            values_ = java.util.Collections.unmodifiableList(values_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            customProperties_ = java.util.Collections.unmodifiableList(customProperties_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Geometry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Geometry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maptalks.benchmark.geo.Geobuf.Data.Geometry.class, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder.class);
      }

      /**
       * Protobuf enum {@code Data.Geometry.Type}
       */
      public enum Type
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>POINT = 0;</code>
         */
        POINT(0),
        /**
         * <code>MULTIPOINT = 1;</code>
         */
        MULTIPOINT(1),
        /**
         * <code>LINESTRING = 2;</code>
         */
        LINESTRING(2),
        /**
         * <code>MULTILINESTRING = 3;</code>
         */
        MULTILINESTRING(3),
        /**
         * <code>POLYGON = 4;</code>
         */
        POLYGON(4),
        /**
         * <code>MULTIPOLYGON = 5;</code>
         */
        MULTIPOLYGON(5),
        /**
         * <code>GEOMETRYCOLLECTION = 6;</code>
         */
        GEOMETRYCOLLECTION(6),
        ;

        /**
         * <code>POINT = 0;</code>
         */
        public static final int POINT_VALUE = 0;
        /**
         * <code>MULTIPOINT = 1;</code>
         */
        public static final int MULTIPOINT_VALUE = 1;
        /**
         * <code>LINESTRING = 2;</code>
         */
        public static final int LINESTRING_VALUE = 2;
        /**
         * <code>MULTILINESTRING = 3;</code>
         */
        public static final int MULTILINESTRING_VALUE = 3;
        /**
         * <code>POLYGON = 4;</code>
         */
        public static final int POLYGON_VALUE = 4;
        /**
         * <code>MULTIPOLYGON = 5;</code>
         */
        public static final int MULTIPOLYGON_VALUE = 5;
        /**
         * <code>GEOMETRYCOLLECTION = 6;</code>
         */
        public static final int GEOMETRYCOLLECTION_VALUE = 6;


        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Type valueOf(int value) {
          return forNumber(value);
        }

        public static Type forNumber(int value) {
          switch (value) {
            case 0: return POINT;
            case 1: return MULTIPOINT;
            case 2: return LINESTRING;
            case 3: return MULTILINESTRING;
            case 4: return POLYGON;
            case 5: return MULTIPOLYGON;
            case 6: return GEOMETRYCOLLECTION;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Type> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                public Type findValueByNumber(int number) {
                  return Type.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDescriptor().getEnumTypes().get(0);
        }

        private static final Type[] VALUES = values();

        public static Type valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Type(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:Data.Geometry.Type)
      }

      private int bitField0_;
      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <code>required .Data.Geometry.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Data.Geometry.Type type = 1;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type getType() {
        org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type result = org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type.valueOf(type_);
        return result == null ? org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type.POINT : result;
      }

      public static final int LENGTHS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> lengths_;
      /**
       * <pre>
       * coordinate structure in lengths
       * </pre>
       *
       * <code>repeated uint32 lengths = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getLengthsList() {
        return lengths_;
      }
      /**
       * <pre>
       * coordinate structure in lengths
       * </pre>
       *
       * <code>repeated uint32 lengths = 2 [packed = true];</code>
       */
      public int getLengthsCount() {
        return lengths_.size();
      }
      /**
       * <pre>
       * coordinate structure in lengths
       * </pre>
       *
       * <code>repeated uint32 lengths = 2 [packed = true];</code>
       */
      public int getLengths(int index) {
        return lengths_.get(index);
      }
      private int lengthsMemoizedSerializedSize = -1;

      public static final int COORDS_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Long> coords_;
      /**
       * <pre>
       * delta-encoded integer values
       * </pre>
       *
       * <code>repeated sint64 coords = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getCoordsList() {
        return coords_;
      }
      /**
       * <pre>
       * delta-encoded integer values
       * </pre>
       *
       * <code>repeated sint64 coords = 3 [packed = true];</code>
       */
      public int getCoordsCount() {
        return coords_.size();
      }
      /**
       * <pre>
       * delta-encoded integer values
       * </pre>
       *
       * <code>repeated sint64 coords = 3 [packed = true];</code>
       */
      public long getCoords(int index) {
        return coords_.get(index);
      }
      private int coordsMemoizedSerializedSize = -1;

      public static final int GEOMETRIES_FIELD_NUMBER = 4;
      private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Geometry> geometries_;
      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Geometry> getGeometriesList() {
        return geometries_;
      }
      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder> 
          getGeometriesOrBuilderList() {
        return geometries_;
      }
      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      public int getGeometriesCount() {
        return geometries_.size();
      }
      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Geometry getGeometries(int index) {
        return geometries_.get(index);
      }
      /**
       * <code>repeated .Data.Geometry geometries = 4;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder getGeometriesOrBuilder(
          int index) {
        return geometries_.get(index);
      }

      public static final int VALUES_FIELD_NUMBER = 13;
      private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> values_;
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> getValuesList() {
        return values_;
      }
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
          getValuesOrBuilderList() {
        return values_;
      }
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Value getValues(int index) {
        return values_.get(index);
      }
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder getValuesOrBuilder(
          int index) {
        return values_.get(index);
      }

      public static final int CUSTOM_PROPERTIES_FIELD_NUMBER = 15;
      private java.util.List<java.lang.Integer> customProperties_;
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getCustomPropertiesList() {
        return customProperties_;
      }
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      public int getCustomPropertiesCount() {
        return customProperties_.size();
      }
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      public int getCustomProperties(int index) {
        return customProperties_.get(index);
      }
      private int customPropertiesMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getGeometriesCount(); i++) {
          if (!getGeometries(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, type_);
        }
        if (getLengthsList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(lengthsMemoizedSerializedSize);
        }
        for (int i = 0; i < lengths_.size(); i++) {
          output.writeUInt32NoTag(lengths_.get(i));
        }
        if (getCoordsList().size() > 0) {
          output.writeUInt32NoTag(26);
          output.writeUInt32NoTag(coordsMemoizedSerializedSize);
        }
        for (int i = 0; i < coords_.size(); i++) {
          output.writeSInt64NoTag(coords_.get(i));
        }
        for (int i = 0; i < geometries_.size(); i++) {
          output.writeMessage(4, geometries_.get(i));
        }
        for (int i = 0; i < values_.size(); i++) {
          output.writeMessage(13, values_.get(i));
        }
        if (getCustomPropertiesList().size() > 0) {
          output.writeUInt32NoTag(122);
          output.writeUInt32NoTag(customPropertiesMemoizedSerializedSize);
        }
        for (int i = 0; i < customProperties_.size(); i++) {
          output.writeUInt32NoTag(customProperties_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < lengths_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(lengths_.get(i));
          }
          size += dataSize;
          if (!getLengthsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          lengthsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < coords_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeSInt64SizeNoTag(coords_.get(i));
          }
          size += dataSize;
          if (!getCoordsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          coordsMemoizedSerializedSize = dataSize;
        }
        for (int i = 0; i < geometries_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, geometries_.get(i));
        }
        for (int i = 0; i < values_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, values_.get(i));
        }
        {
          int dataSize = 0;
          for (int i = 0; i < customProperties_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(customProperties_.get(i));
          }
          size += dataSize;
          if (!getCustomPropertiesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          customPropertiesMemoizedSerializedSize = dataSize;
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.maptalks.benchmark.geo.Geobuf.Data.Geometry)) {
          return super.equals(obj);
        }
        org.maptalks.benchmark.geo.Geobuf.Data.Geometry other = (org.maptalks.benchmark.geo.Geobuf.Data.Geometry) obj;

        boolean result = true;
        result = result && (hasType() == other.hasType());
        if (hasType()) {
          result = result && type_ == other.type_;
        }
        result = result && getLengthsList()
            .equals(other.getLengthsList());
        result = result && getCoordsList()
            .equals(other.getCoordsList());
        result = result && getGeometriesList()
            .equals(other.getGeometriesList());
        result = result && getValuesList()
            .equals(other.getValuesList());
        result = result && getCustomPropertiesList()
            .equals(other.getCustomPropertiesList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
        }
        if (getLengthsCount() > 0) {
          hash = (37 * hash) + LENGTHS_FIELD_NUMBER;
          hash = (53 * hash) + getLengthsList().hashCode();
        }
        if (getCoordsCount() > 0) {
          hash = (37 * hash) + COORDS_FIELD_NUMBER;
          hash = (53 * hash) + getCoordsList().hashCode();
        }
        if (getGeometriesCount() > 0) {
          hash = (37 * hash) + GEOMETRIES_FIELD_NUMBER;
          hash = (53 * hash) + getGeometriesList().hashCode();
        }
        if (getValuesCount() > 0) {
          hash = (37 * hash) + VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getValuesList().hashCode();
        }
        if (getCustomPropertiesCount() > 0) {
          hash = (37 * hash) + CUSTOM_PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getCustomPropertiesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.maptalks.benchmark.geo.Geobuf.Data.Geometry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Data.Geometry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Data.Geometry)
          org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Geometry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Geometry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.maptalks.benchmark.geo.Geobuf.Data.Geometry.class, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder.class);
        }

        // Construct using org.maptalks.benchmark.geo.Geobuf.Data.Geometry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getGeometriesFieldBuilder();
            getValuesFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          type_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          lengths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          coords_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          if (geometriesBuilder_ == null) {
            geometries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            geometriesBuilder_.clear();
          }
          if (valuesBuilder_ == null) {
            values_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            valuesBuilder_.clear();
          }
          customProperties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Geometry_descriptor;
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry getDefaultInstanceForType() {
          return org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance();
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry build() {
          org.maptalks.benchmark.geo.Geobuf.Data.Geometry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry buildPartial() {
          org.maptalks.benchmark.geo.Geobuf.Data.Geometry result = new org.maptalks.benchmark.geo.Geobuf.Data.Geometry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.type_ = type_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            lengths_ = java.util.Collections.unmodifiableList(lengths_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.lengths_ = lengths_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            coords_ = java.util.Collections.unmodifiableList(coords_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.coords_ = coords_;
          if (geometriesBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              geometries_ = java.util.Collections.unmodifiableList(geometries_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.geometries_ = geometries_;
          } else {
            result.geometries_ = geometriesBuilder_.build();
          }
          if (valuesBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              values_ = java.util.Collections.unmodifiableList(values_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.values_ = values_;
          } else {
            result.values_ = valuesBuilder_.build();
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            customProperties_ = java.util.Collections.unmodifiableList(customProperties_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.customProperties_ = customProperties_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.maptalks.benchmark.geo.Geobuf.Data.Geometry) {
            return mergeFrom((org.maptalks.benchmark.geo.Geobuf.Data.Geometry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.maptalks.benchmark.geo.Geobuf.Data.Geometry other) {
          if (other == org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance()) return this;
          if (other.hasType()) {
            setType(other.getType());
          }
          if (!other.lengths_.isEmpty()) {
            if (lengths_.isEmpty()) {
              lengths_ = other.lengths_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLengthsIsMutable();
              lengths_.addAll(other.lengths_);
            }
            onChanged();
          }
          if (!other.coords_.isEmpty()) {
            if (coords_.isEmpty()) {
              coords_ = other.coords_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureCoordsIsMutable();
              coords_.addAll(other.coords_);
            }
            onChanged();
          }
          if (geometriesBuilder_ == null) {
            if (!other.geometries_.isEmpty()) {
              if (geometries_.isEmpty()) {
                geometries_ = other.geometries_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureGeometriesIsMutable();
                geometries_.addAll(other.geometries_);
              }
              onChanged();
            }
          } else {
            if (!other.geometries_.isEmpty()) {
              if (geometriesBuilder_.isEmpty()) {
                geometriesBuilder_.dispose();
                geometriesBuilder_ = null;
                geometries_ = other.geometries_;
                bitField0_ = (bitField0_ & ~0x00000008);
                geometriesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getGeometriesFieldBuilder() : null;
              } else {
                geometriesBuilder_.addAllMessages(other.geometries_);
              }
            }
          }
          if (valuesBuilder_ == null) {
            if (!other.values_.isEmpty()) {
              if (values_.isEmpty()) {
                values_ = other.values_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureValuesIsMutable();
                values_.addAll(other.values_);
              }
              onChanged();
            }
          } else {
            if (!other.values_.isEmpty()) {
              if (valuesBuilder_.isEmpty()) {
                valuesBuilder_.dispose();
                valuesBuilder_ = null;
                values_ = other.values_;
                bitField0_ = (bitField0_ & ~0x00000010);
                valuesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getValuesFieldBuilder() : null;
              } else {
                valuesBuilder_.addAllMessages(other.values_);
              }
            }
          }
          if (!other.customProperties_.isEmpty()) {
            if (customProperties_.isEmpty()) {
              customProperties_ = other.customProperties_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCustomPropertiesIsMutable();
              customProperties_.addAll(other.customProperties_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          if (!hasType()) {
            return false;
          }
          for (int i = 0; i < getGeometriesCount(); i++) {
            if (!getGeometries(i).isInitialized()) {
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.maptalks.benchmark.geo.Geobuf.Data.Geometry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.maptalks.benchmark.geo.Geobuf.Data.Geometry) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int type_ = 0;
        /**
         * <code>required .Data.Geometry.Type type = 1;</code>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .Data.Geometry.Type type = 1;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type getType() {
          org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type result = org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type.valueOf(type_);
          return result == null ? org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type.POINT : result;
        }
        /**
         * <code>required .Data.Geometry.Type type = 1;</code>
         */
        public Builder setType(org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>required .Data.Geometry.Type type = 1;</code>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> lengths_ = java.util.Collections.emptyList();
        private void ensureLengthsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            lengths_ = new java.util.ArrayList<java.lang.Integer>(lengths_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <pre>
         * coordinate structure in lengths
         * </pre>
         *
         * <code>repeated uint32 lengths = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getLengthsList() {
          return java.util.Collections.unmodifiableList(lengths_);
        }
        /**
         * <pre>
         * coordinate structure in lengths
         * </pre>
         *
         * <code>repeated uint32 lengths = 2 [packed = true];</code>
         */
        public int getLengthsCount() {
          return lengths_.size();
        }
        /**
         * <pre>
         * coordinate structure in lengths
         * </pre>
         *
         * <code>repeated uint32 lengths = 2 [packed = true];</code>
         */
        public int getLengths(int index) {
          return lengths_.get(index);
        }
        /**
         * <pre>
         * coordinate structure in lengths
         * </pre>
         *
         * <code>repeated uint32 lengths = 2 [packed = true];</code>
         */
        public Builder setLengths(
            int index, int value) {
          ensureLengthsIsMutable();
          lengths_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * coordinate structure in lengths
         * </pre>
         *
         * <code>repeated uint32 lengths = 2 [packed = true];</code>
         */
        public Builder addLengths(int value) {
          ensureLengthsIsMutable();
          lengths_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * coordinate structure in lengths
         * </pre>
         *
         * <code>repeated uint32 lengths = 2 [packed = true];</code>
         */
        public Builder addAllLengths(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureLengthsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lengths_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * coordinate structure in lengths
         * </pre>
         *
         * <code>repeated uint32 lengths = 2 [packed = true];</code>
         */
        public Builder clearLengths() {
          lengths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Long> coords_ = java.util.Collections.emptyList();
        private void ensureCoordsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            coords_ = new java.util.ArrayList<java.lang.Long>(coords_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <pre>
         * delta-encoded integer values
         * </pre>
         *
         * <code>repeated sint64 coords = 3 [packed = true];</code>
         */
        public java.util.List<java.lang.Long>
            getCoordsList() {
          return java.util.Collections.unmodifiableList(coords_);
        }
        /**
         * <pre>
         * delta-encoded integer values
         * </pre>
         *
         * <code>repeated sint64 coords = 3 [packed = true];</code>
         */
        public int getCoordsCount() {
          return coords_.size();
        }
        /**
         * <pre>
         * delta-encoded integer values
         * </pre>
         *
         * <code>repeated sint64 coords = 3 [packed = true];</code>
         */
        public long getCoords(int index) {
          return coords_.get(index);
        }
        /**
         * <pre>
         * delta-encoded integer values
         * </pre>
         *
         * <code>repeated sint64 coords = 3 [packed = true];</code>
         */
        public Builder setCoords(
            int index, long value) {
          ensureCoordsIsMutable();
          coords_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * delta-encoded integer values
         * </pre>
         *
         * <code>repeated sint64 coords = 3 [packed = true];</code>
         */
        public Builder addCoords(long value) {
          ensureCoordsIsMutable();
          coords_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * delta-encoded integer values
         * </pre>
         *
         * <code>repeated sint64 coords = 3 [packed = true];</code>
         */
        public Builder addAllCoords(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureCoordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, coords_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * delta-encoded integer values
         * </pre>
         *
         * <code>repeated sint64 coords = 3 [packed = true];</code>
         */
        public Builder clearCoords() {
          coords_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Geometry> geometries_ =
          java.util.Collections.emptyList();
        private void ensureGeometriesIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            geometries_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Geometry>(geometries_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Geometry, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder, org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder> geometriesBuilder_;

        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Geometry> getGeometriesList() {
          if (geometriesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(geometries_);
          } else {
            return geometriesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public int getGeometriesCount() {
          if (geometriesBuilder_ == null) {
            return geometries_.size();
          } else {
            return geometriesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry getGeometries(int index) {
          if (geometriesBuilder_ == null) {
            return geometries_.get(index);
          } else {
            return geometriesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public Builder setGeometries(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Geometry value) {
          if (geometriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGeometriesIsMutable();
            geometries_.set(index, value);
            onChanged();
          } else {
            geometriesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public Builder setGeometries(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder builderForValue) {
          if (geometriesBuilder_ == null) {
            ensureGeometriesIsMutable();
            geometries_.set(index, builderForValue.build());
            onChanged();
          } else {
            geometriesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public Builder addGeometries(org.maptalks.benchmark.geo.Geobuf.Data.Geometry value) {
          if (geometriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGeometriesIsMutable();
            geometries_.add(value);
            onChanged();
          } else {
            geometriesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public Builder addGeometries(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Geometry value) {
          if (geometriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGeometriesIsMutable();
            geometries_.add(index, value);
            onChanged();
          } else {
            geometriesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public Builder addGeometries(
            org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder builderForValue) {
          if (geometriesBuilder_ == null) {
            ensureGeometriesIsMutable();
            geometries_.add(builderForValue.build());
            onChanged();
          } else {
            geometriesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public Builder addGeometries(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder builderForValue) {
          if (geometriesBuilder_ == null) {
            ensureGeometriesIsMutable();
            geometries_.add(index, builderForValue.build());
            onChanged();
          } else {
            geometriesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public Builder addAllGeometries(
            java.lang.Iterable<? extends org.maptalks.benchmark.geo.Geobuf.Data.Geometry> values) {
          if (geometriesBuilder_ == null) {
            ensureGeometriesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, geometries_);
            onChanged();
          } else {
            geometriesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public Builder clearGeometries() {
          if (geometriesBuilder_ == null) {
            geometries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            geometriesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public Builder removeGeometries(int index) {
          if (geometriesBuilder_ == null) {
            ensureGeometriesIsMutable();
            geometries_.remove(index);
            onChanged();
          } else {
            geometriesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder getGeometriesBuilder(
            int index) {
          return getGeometriesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder getGeometriesOrBuilder(
            int index) {
          if (geometriesBuilder_ == null) {
            return geometries_.get(index);  } else {
            return geometriesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder> 
             getGeometriesOrBuilderList() {
          if (geometriesBuilder_ != null) {
            return geometriesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(geometries_);
          }
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder addGeometriesBuilder() {
          return getGeometriesFieldBuilder().addBuilder(
              org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance());
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder addGeometriesBuilder(
            int index) {
          return getGeometriesFieldBuilder().addBuilder(
              index, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance());
        }
        /**
         * <code>repeated .Data.Geometry geometries = 4;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder> 
             getGeometriesBuilderList() {
          return getGeometriesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Geometry, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder, org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder> 
            getGeometriesFieldBuilder() {
          if (geometriesBuilder_ == null) {
            geometriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.maptalks.benchmark.geo.Geobuf.Data.Geometry, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder, org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder>(
                    geometries_,
                    ((bitField0_ & 0x00000008) == 0x00000008),
                    getParentForChildren(),
                    isClean());
            geometries_ = null;
          }
          return geometriesBuilder_;
        }

        private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> values_ =
          java.util.Collections.emptyList();
        private void ensureValuesIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            values_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Value>(values_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Value, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder, org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> valuesBuilder_;

        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> getValuesList() {
          if (valuesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(values_);
          } else {
            return valuesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public int getValuesCount() {
          if (valuesBuilder_ == null) {
            return values_.size();
          } else {
            return valuesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value getValues(int index) {
          if (valuesBuilder_ == null) {
            return values_.get(index);
          } else {
            return valuesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder setValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.set(index, value);
            onChanged();
          } else {
            valuesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder setValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.set(index, builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(org.maptalks.benchmark.geo.Geobuf.Data.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.add(value);
            onChanged();
          } else {
            valuesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.add(index, value);
            onChanged();
          } else {
            valuesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(
            org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.add(builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.add(index, builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addAllValues(
            java.lang.Iterable<? extends org.maptalks.benchmark.geo.Geobuf.Data.Value> values) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, values_);
            onChanged();
          } else {
            valuesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder clearValues() {
          if (valuesBuilder_ == null) {
            values_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            valuesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder removeValues(int index) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.remove(index);
            onChanged();
          } else {
            valuesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder getValuesBuilder(
            int index) {
          return getValuesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder getValuesOrBuilder(
            int index) {
          if (valuesBuilder_ == null) {
            return values_.get(index);  } else {
            return valuesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
             getValuesOrBuilderList() {
          if (valuesBuilder_ != null) {
            return valuesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(values_);
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder addValuesBuilder() {
          return getValuesFieldBuilder().addBuilder(
              org.maptalks.benchmark.geo.Geobuf.Data.Value.getDefaultInstance());
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder addValuesBuilder(
            int index) {
          return getValuesFieldBuilder().addBuilder(
              index, org.maptalks.benchmark.geo.Geobuf.Data.Value.getDefaultInstance());
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder> 
             getValuesBuilderList() {
          return getValuesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Value, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder, org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
            getValuesFieldBuilder() {
          if (valuesBuilder_ == null) {
            valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.maptalks.benchmark.geo.Geobuf.Data.Value, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder, org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder>(
                    values_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            values_ = null;
          }
          return valuesBuilder_;
        }

        private java.util.List<java.lang.Integer> customProperties_ = java.util.Collections.emptyList();
        private void ensureCustomPropertiesIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            customProperties_ = new java.util.ArrayList<java.lang.Integer>(customProperties_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getCustomPropertiesList() {
          return java.util.Collections.unmodifiableList(customProperties_);
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public int getCustomPropertiesCount() {
          return customProperties_.size();
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public int getCustomProperties(int index) {
          return customProperties_.get(index);
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder setCustomProperties(
            int index, int value) {
          ensureCustomPropertiesIsMutable();
          customProperties_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder addCustomProperties(int value) {
          ensureCustomPropertiesIsMutable();
          customProperties_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder addAllCustomProperties(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCustomPropertiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, customProperties_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder clearCustomProperties() {
          customProperties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Data.Geometry)
      }

      // @@protoc_insertion_point(class_scope:Data.Geometry)
      private static final org.maptalks.benchmark.geo.Geobuf.Data.Geometry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.maptalks.benchmark.geo.Geobuf.Data.Geometry();
      }

      public static org.maptalks.benchmark.geo.Geobuf.Data.Geometry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Geometry>
          PARSER = new com.google.protobuf.AbstractParser<Geometry>() {
        public Geometry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Geometry(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Geometry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Geometry> getParserForType() {
        return PARSER;
      }

      public org.maptalks.benchmark.geo.Geobuf.Data.Geometry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FeatureCollectionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Data.FeatureCollection)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Feature> 
          getFeaturesList();
      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.Feature getFeatures(int index);
      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      int getFeaturesCount();
      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder> 
          getFeaturesOrBuilderList();
      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder getFeaturesOrBuilder(
          int index);

      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> 
          getValuesList();
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.Value getValues(int index);
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      int getValuesCount();
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
          getValuesOrBuilderList();
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder getValuesOrBuilder(
          int index);

      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getCustomPropertiesList();
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      int getCustomPropertiesCount();
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      int getCustomProperties(int index);
    }
    /**
     * Protobuf type {@code Data.FeatureCollection}
     */
    public  static final class FeatureCollection extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Data.FeatureCollection)
        FeatureCollectionOrBuilder {
      // Use FeatureCollection.newBuilder() to construct.
      private FeatureCollection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FeatureCollection() {
        features_ = java.util.Collections.emptyList();
        values_ = java.util.Collections.emptyList();
        customProperties_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private FeatureCollection(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  features_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Feature>();
                  mutable_bitField0_ |= 0x00000001;
                }
                features_.add(
                    input.readMessage(org.maptalks.benchmark.geo.Geobuf.Data.Feature.PARSER, extensionRegistry));
                break;
              }
              case 106: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  values_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Value>();
                  mutable_bitField0_ |= 0x00000002;
                }
                values_.add(
                    input.readMessage(org.maptalks.benchmark.geo.Geobuf.Data.Value.PARSER, extensionRegistry));
                break;
              }
              case 120: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  customProperties_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                customProperties_.add(input.readUInt32());
                break;
              }
              case 122: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  customProperties_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  customProperties_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            features_ = java.util.Collections.unmodifiableList(features_);
          }
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            values_ = java.util.Collections.unmodifiableList(values_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            customProperties_ = java.util.Collections.unmodifiableList(customProperties_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_FeatureCollection_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_FeatureCollection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.class, org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.Builder.class);
      }

      public static final int FEATURES_FIELD_NUMBER = 1;
      private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Feature> features_;
      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Feature> getFeaturesList() {
        return features_;
      }
      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder> 
          getFeaturesOrBuilderList() {
        return features_;
      }
      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      public int getFeaturesCount() {
        return features_.size();
      }
      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Feature getFeatures(int index) {
        return features_.get(index);
      }
      /**
       * <code>repeated .Data.Feature features = 1;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder getFeaturesOrBuilder(
          int index) {
        return features_.get(index);
      }

      public static final int VALUES_FIELD_NUMBER = 13;
      private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> values_;
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> getValuesList() {
        return values_;
      }
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
          getValuesOrBuilderList() {
        return values_;
      }
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Value getValues(int index) {
        return values_.get(index);
      }
      /**
       * <code>repeated .Data.Value values = 13;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder getValuesOrBuilder(
          int index) {
        return values_.get(index);
      }

      public static final int CUSTOM_PROPERTIES_FIELD_NUMBER = 15;
      private java.util.List<java.lang.Integer> customProperties_;
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getCustomPropertiesList() {
        return customProperties_;
      }
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      public int getCustomPropertiesCount() {
        return customProperties_.size();
      }
      /**
       * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
       */
      public int getCustomProperties(int index) {
        return customProperties_.get(index);
      }
      private int customPropertiesMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        for (int i = 0; i < getFeaturesCount(); i++) {
          if (!getFeatures(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < features_.size(); i++) {
          output.writeMessage(1, features_.get(i));
        }
        for (int i = 0; i < values_.size(); i++) {
          output.writeMessage(13, values_.get(i));
        }
        if (getCustomPropertiesList().size() > 0) {
          output.writeUInt32NoTag(122);
          output.writeUInt32NoTag(customPropertiesMemoizedSerializedSize);
        }
        for (int i = 0; i < customProperties_.size(); i++) {
          output.writeUInt32NoTag(customProperties_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < features_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, features_.get(i));
        }
        for (int i = 0; i < values_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, values_.get(i));
        }
        {
          int dataSize = 0;
          for (int i = 0; i < customProperties_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(customProperties_.get(i));
          }
          size += dataSize;
          if (!getCustomPropertiesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          customPropertiesMemoizedSerializedSize = dataSize;
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection)) {
          return super.equals(obj);
        }
        org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection other = (org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) obj;

        boolean result = true;
        result = result && getFeaturesList()
            .equals(other.getFeaturesList());
        result = result && getValuesList()
            .equals(other.getValuesList());
        result = result && getCustomPropertiesList()
            .equals(other.getCustomPropertiesList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (getFeaturesCount() > 0) {
          hash = (37 * hash) + FEATURES_FIELD_NUMBER;
          hash = (53 * hash) + getFeaturesList().hashCode();
        }
        if (getValuesCount() > 0) {
          hash = (37 * hash) + VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getValuesList().hashCode();
        }
        if (getCustomPropertiesCount() > 0) {
          hash = (37 * hash) + CUSTOM_PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getCustomPropertiesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Data.FeatureCollection}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Data.FeatureCollection)
          org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollectionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_FeatureCollection_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_FeatureCollection_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.class, org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.Builder.class);
        }

        // Construct using org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getFeaturesFieldBuilder();
            getValuesFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (featuresBuilder_ == null) {
            features_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            featuresBuilder_.clear();
          }
          if (valuesBuilder_ == null) {
            values_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            valuesBuilder_.clear();
          }
          customProperties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_FeatureCollection_descriptor;
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection getDefaultInstanceForType() {
          return org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.getDefaultInstance();
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection build() {
          org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection buildPartial() {
          org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection result = new org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection(this);
          int from_bitField0_ = bitField0_;
          if (featuresBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              features_ = java.util.Collections.unmodifiableList(features_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.features_ = features_;
          } else {
            result.features_ = featuresBuilder_.build();
          }
          if (valuesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              values_ = java.util.Collections.unmodifiableList(values_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.values_ = values_;
          } else {
            result.values_ = valuesBuilder_.build();
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            customProperties_ = java.util.Collections.unmodifiableList(customProperties_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.customProperties_ = customProperties_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) {
            return mergeFrom((org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection other) {
          if (other == org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.getDefaultInstance()) return this;
          if (featuresBuilder_ == null) {
            if (!other.features_.isEmpty()) {
              if (features_.isEmpty()) {
                features_ = other.features_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureFeaturesIsMutable();
                features_.addAll(other.features_);
              }
              onChanged();
            }
          } else {
            if (!other.features_.isEmpty()) {
              if (featuresBuilder_.isEmpty()) {
                featuresBuilder_.dispose();
                featuresBuilder_ = null;
                features_ = other.features_;
                bitField0_ = (bitField0_ & ~0x00000001);
                featuresBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getFeaturesFieldBuilder() : null;
              } else {
                featuresBuilder_.addAllMessages(other.features_);
              }
            }
          }
          if (valuesBuilder_ == null) {
            if (!other.values_.isEmpty()) {
              if (values_.isEmpty()) {
                values_ = other.values_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureValuesIsMutable();
                values_.addAll(other.values_);
              }
              onChanged();
            }
          } else {
            if (!other.values_.isEmpty()) {
              if (valuesBuilder_.isEmpty()) {
                valuesBuilder_.dispose();
                valuesBuilder_ = null;
                values_ = other.values_;
                bitField0_ = (bitField0_ & ~0x00000002);
                valuesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getValuesFieldBuilder() : null;
              } else {
                valuesBuilder_.addAllMessages(other.values_);
              }
            }
          }
          if (!other.customProperties_.isEmpty()) {
            if (customProperties_.isEmpty()) {
              customProperties_ = other.customProperties_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureCustomPropertiesIsMutable();
              customProperties_.addAll(other.customProperties_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getFeaturesCount(); i++) {
            if (!getFeatures(i).isInitialized()) {
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Feature> features_ =
          java.util.Collections.emptyList();
        private void ensureFeaturesIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            features_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Feature>(features_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Feature, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder, org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder> featuresBuilder_;

        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Feature> getFeaturesList() {
          if (featuresBuilder_ == null) {
            return java.util.Collections.unmodifiableList(features_);
          } else {
            return featuresBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public int getFeaturesCount() {
          if (featuresBuilder_ == null) {
            return features_.size();
          } else {
            return featuresBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Feature getFeatures(int index) {
          if (featuresBuilder_ == null) {
            return features_.get(index);
          } else {
            return featuresBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public Builder setFeatures(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Feature value) {
          if (featuresBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFeaturesIsMutable();
            features_.set(index, value);
            onChanged();
          } else {
            featuresBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public Builder setFeatures(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder builderForValue) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            features_.set(index, builderForValue.build());
            onChanged();
          } else {
            featuresBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public Builder addFeatures(org.maptalks.benchmark.geo.Geobuf.Data.Feature value) {
          if (featuresBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFeaturesIsMutable();
            features_.add(value);
            onChanged();
          } else {
            featuresBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public Builder addFeatures(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Feature value) {
          if (featuresBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFeaturesIsMutable();
            features_.add(index, value);
            onChanged();
          } else {
            featuresBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public Builder addFeatures(
            org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder builderForValue) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            features_.add(builderForValue.build());
            onChanged();
          } else {
            featuresBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public Builder addFeatures(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder builderForValue) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            features_.add(index, builderForValue.build());
            onChanged();
          } else {
            featuresBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public Builder addAllFeatures(
            java.lang.Iterable<? extends org.maptalks.benchmark.geo.Geobuf.Data.Feature> values) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, features_);
            onChanged();
          } else {
            featuresBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public Builder clearFeatures() {
          if (featuresBuilder_ == null) {
            features_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            featuresBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public Builder removeFeatures(int index) {
          if (featuresBuilder_ == null) {
            ensureFeaturesIsMutable();
            features_.remove(index);
            onChanged();
          } else {
            featuresBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder getFeaturesBuilder(
            int index) {
          return getFeaturesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder getFeaturesOrBuilder(
            int index) {
          if (featuresBuilder_ == null) {
            return features_.get(index);  } else {
            return featuresBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder> 
             getFeaturesOrBuilderList() {
          if (featuresBuilder_ != null) {
            return featuresBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(features_);
          }
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder addFeaturesBuilder() {
          return getFeaturesFieldBuilder().addBuilder(
              org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance());
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder addFeaturesBuilder(
            int index) {
          return getFeaturesFieldBuilder().addBuilder(
              index, org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance());
        }
        /**
         * <code>repeated .Data.Feature features = 1;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder> 
             getFeaturesBuilderList() {
          return getFeaturesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Feature, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder, org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder> 
            getFeaturesFieldBuilder() {
          if (featuresBuilder_ == null) {
            featuresBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.maptalks.benchmark.geo.Geobuf.Data.Feature, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder, org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder>(
                    features_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            features_ = null;
          }
          return featuresBuilder_;
        }

        private java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> values_ =
          java.util.Collections.emptyList();
        private void ensureValuesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            values_ = new java.util.ArrayList<org.maptalks.benchmark.geo.Geobuf.Data.Value>(values_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Value, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder, org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> valuesBuilder_;

        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value> getValuesList() {
          if (valuesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(values_);
          } else {
            return valuesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public int getValuesCount() {
          if (valuesBuilder_ == null) {
            return values_.size();
          } else {
            return valuesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value getValues(int index) {
          if (valuesBuilder_ == null) {
            return values_.get(index);
          } else {
            return valuesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder setValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.set(index, value);
            onChanged();
          } else {
            valuesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder setValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.set(index, builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(org.maptalks.benchmark.geo.Geobuf.Data.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.add(value);
            onChanged();
          } else {
            valuesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureValuesIsMutable();
            values_.add(index, value);
            onChanged();
          } else {
            valuesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(
            org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.add(builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addValues(
            int index, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.add(index, builderForValue.build());
            onChanged();
          } else {
            valuesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder addAllValues(
            java.lang.Iterable<? extends org.maptalks.benchmark.geo.Geobuf.Data.Value> values) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, values_);
            onChanged();
          } else {
            valuesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder clearValues() {
          if (valuesBuilder_ == null) {
            values_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            valuesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public Builder removeValues(int index) {
          if (valuesBuilder_ == null) {
            ensureValuesIsMutable();
            values_.remove(index);
            onChanged();
          } else {
            valuesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder getValuesBuilder(
            int index) {
          return getValuesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder getValuesOrBuilder(
            int index) {
          if (valuesBuilder_ == null) {
            return values_.get(index);  } else {
            return valuesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public java.util.List<? extends org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
             getValuesOrBuilderList() {
          if (valuesBuilder_ != null) {
            return valuesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(values_);
          }
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder addValuesBuilder() {
          return getValuesFieldBuilder().addBuilder(
              org.maptalks.benchmark.geo.Geobuf.Data.Value.getDefaultInstance());
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder addValuesBuilder(
            int index) {
          return getValuesFieldBuilder().addBuilder(
              index, org.maptalks.benchmark.geo.Geobuf.Data.Value.getDefaultInstance());
        }
        /**
         * <code>repeated .Data.Value values = 13;</code>
         */
        public java.util.List<org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder> 
             getValuesBuilderList() {
          return getValuesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.maptalks.benchmark.geo.Geobuf.Data.Value, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder, org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder> 
            getValuesFieldBuilder() {
          if (valuesBuilder_ == null) {
            valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.maptalks.benchmark.geo.Geobuf.Data.Value, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder, org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder>(
                    values_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            values_ = null;
          }
          return valuesBuilder_;
        }

        private java.util.List<java.lang.Integer> customProperties_ = java.util.Collections.emptyList();
        private void ensureCustomPropertiesIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            customProperties_ = new java.util.ArrayList<java.lang.Integer>(customProperties_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getCustomPropertiesList() {
          return java.util.Collections.unmodifiableList(customProperties_);
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public int getCustomPropertiesCount() {
          return customProperties_.size();
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public int getCustomProperties(int index) {
          return customProperties_.get(index);
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder setCustomProperties(
            int index, int value) {
          ensureCustomPropertiesIsMutable();
          customProperties_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder addCustomProperties(int value) {
          ensureCustomPropertiesIsMutable();
          customProperties_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder addAllCustomProperties(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCustomPropertiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, customProperties_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 custom_properties = 15 [packed = true];</code>
         */
        public Builder clearCustomProperties() {
          customProperties_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Data.FeatureCollection)
      }

      // @@protoc_insertion_point(class_scope:Data.FeatureCollection)
      private static final org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection();
      }

      public static org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<FeatureCollection>
          PARSER = new com.google.protobuf.AbstractParser<FeatureCollection>() {
        public FeatureCollection parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new FeatureCollection(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<FeatureCollection> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FeatureCollection> getParserForType() {
        return PARSER;
      }

      public org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ValueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Data.Value)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string string_value = 1;</code>
       */
      boolean hasStringValue();
      /**
       * <code>optional string string_value = 1;</code>
       */
      java.lang.String getStringValue();
      /**
       * <code>optional string string_value = 1;</code>
       */
      com.google.protobuf.ByteString
          getStringValueBytes();

      /**
       * <code>optional double double_value = 2;</code>
       */
      boolean hasDoubleValue();
      /**
       * <code>optional double double_value = 2;</code>
       */
      double getDoubleValue();

      /**
       * <code>optional uint64 pos_int_value = 3;</code>
       */
      boolean hasPosIntValue();
      /**
       * <code>optional uint64 pos_int_value = 3;</code>
       */
      long getPosIntValue();

      /**
       * <code>optional uint64 neg_int_value = 4;</code>
       */
      boolean hasNegIntValue();
      /**
       * <code>optional uint64 neg_int_value = 4;</code>
       */
      long getNegIntValue();

      /**
       * <code>optional bool bool_value = 5;</code>
       */
      boolean hasBoolValue();
      /**
       * <code>optional bool bool_value = 5;</code>
       */
      boolean getBoolValue();

      /**
       * <code>optional string json_value = 6;</code>
       */
      boolean hasJsonValue();
      /**
       * <code>optional string json_value = 6;</code>
       */
      java.lang.String getJsonValue();
      /**
       * <code>optional string json_value = 6;</code>
       */
      com.google.protobuf.ByteString
          getJsonValueBytes();

      public org.maptalks.benchmark.geo.Geobuf.Data.Value.ValueTypeCase getValueTypeCase();
    }
    /**
     * Protobuf type {@code Data.Value}
     */
    public  static final class Value extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Data.Value)
        ValueOrBuilder {
      // Use Value.newBuilder() to construct.
      private Value(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Value() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Value(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                valueTypeCase_ = 1;
                valueType_ = bs;
                break;
              }
              case 17: {
                valueTypeCase_ = 2;
                valueType_ = input.readDouble();
                break;
              }
              case 24: {
                valueTypeCase_ = 3;
                valueType_ = input.readUInt64();
                break;
              }
              case 32: {
                valueTypeCase_ = 4;
                valueType_ = input.readUInt64();
                break;
              }
              case 40: {
                valueTypeCase_ = 5;
                valueType_ = input.readBool();
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                valueTypeCase_ = 6;
                valueType_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Value_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Value_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maptalks.benchmark.geo.Geobuf.Data.Value.class, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder.class);
      }

      private int bitField0_;
      private int valueTypeCase_ = 0;
      private java.lang.Object valueType_;
      public enum ValueTypeCase
          implements com.google.protobuf.Internal.EnumLite {
        STRING_VALUE(1),
        DOUBLE_VALUE(2),
        POS_INT_VALUE(3),
        NEG_INT_VALUE(4),
        BOOL_VALUE(5),
        JSON_VALUE(6),
        VALUETYPE_NOT_SET(0);
        private final int value;
        private ValueTypeCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ValueTypeCase valueOf(int value) {
          return forNumber(value);
        }

        public static ValueTypeCase forNumber(int value) {
          switch (value) {
            case 1: return STRING_VALUE;
            case 2: return DOUBLE_VALUE;
            case 3: return POS_INT_VALUE;
            case 4: return NEG_INT_VALUE;
            case 5: return BOOL_VALUE;
            case 6: return JSON_VALUE;
            case 0: return VALUETYPE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ValueTypeCase
      getValueTypeCase() {
        return ValueTypeCase.forNumber(
            valueTypeCase_);
      }

      public static final int STRING_VALUE_FIELD_NUMBER = 1;
      /**
       * <code>optional string string_value = 1;</code>
       */
      public boolean hasStringValue() {
        return valueTypeCase_ == 1;
      }
      /**
       * <code>optional string string_value = 1;</code>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = "";
        if (valueTypeCase_ == 1) {
          ref = valueType_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8() && (valueTypeCase_ == 1)) {
            valueType_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string string_value = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = "";
        if (valueTypeCase_ == 1) {
          ref = valueType_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valueTypeCase_ == 1) {
            valueType_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DOUBLE_VALUE_FIELD_NUMBER = 2;
      /**
       * <code>optional double double_value = 2;</code>
       */
      public boolean hasDoubleValue() {
        return valueTypeCase_ == 2;
      }
      /**
       * <code>optional double double_value = 2;</code>
       */
      public double getDoubleValue() {
        if (valueTypeCase_ == 2) {
          return (java.lang.Double) valueType_;
        }
        return 0D;
      }

      public static final int POS_INT_VALUE_FIELD_NUMBER = 3;
      /**
       * <code>optional uint64 pos_int_value = 3;</code>
       */
      public boolean hasPosIntValue() {
        return valueTypeCase_ == 3;
      }
      /**
       * <code>optional uint64 pos_int_value = 3;</code>
       */
      public long getPosIntValue() {
        if (valueTypeCase_ == 3) {
          return (java.lang.Long) valueType_;
        }
        return 0L;
      }

      public static final int NEG_INT_VALUE_FIELD_NUMBER = 4;
      /**
       * <code>optional uint64 neg_int_value = 4;</code>
       */
      public boolean hasNegIntValue() {
        return valueTypeCase_ == 4;
      }
      /**
       * <code>optional uint64 neg_int_value = 4;</code>
       */
      public long getNegIntValue() {
        if (valueTypeCase_ == 4) {
          return (java.lang.Long) valueType_;
        }
        return 0L;
      }

      public static final int BOOL_VALUE_FIELD_NUMBER = 5;
      /**
       * <code>optional bool bool_value = 5;</code>
       */
      public boolean hasBoolValue() {
        return valueTypeCase_ == 5;
      }
      /**
       * <code>optional bool bool_value = 5;</code>
       */
      public boolean getBoolValue() {
        if (valueTypeCase_ == 5) {
          return (java.lang.Boolean) valueType_;
        }
        return false;
      }

      public static final int JSON_VALUE_FIELD_NUMBER = 6;
      /**
       * <code>optional string json_value = 6;</code>
       */
      public boolean hasJsonValue() {
        return valueTypeCase_ == 6;
      }
      /**
       * <code>optional string json_value = 6;</code>
       */
      public java.lang.String getJsonValue() {
        java.lang.Object ref = "";
        if (valueTypeCase_ == 6) {
          ref = valueType_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8() && (valueTypeCase_ == 6)) {
            valueType_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string json_value = 6;</code>
       */
      public com.google.protobuf.ByteString
          getJsonValueBytes() {
        java.lang.Object ref = "";
        if (valueTypeCase_ == 6) {
          ref = valueType_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valueTypeCase_ == 6) {
            valueType_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (valueTypeCase_ == 1) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, valueType_);
        }
        if (valueTypeCase_ == 2) {
          output.writeDouble(
              2, (double)((java.lang.Double) valueType_));
        }
        if (valueTypeCase_ == 3) {
          output.writeUInt64(
              3, (long)((java.lang.Long) valueType_));
        }
        if (valueTypeCase_ == 4) {
          output.writeUInt64(
              4, (long)((java.lang.Long) valueType_));
        }
        if (valueTypeCase_ == 5) {
          output.writeBool(
              5, (boolean)((java.lang.Boolean) valueType_));
        }
        if (valueTypeCase_ == 6) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, valueType_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (valueTypeCase_ == 1) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, valueType_);
        }
        if (valueTypeCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(
                2, (double)((java.lang.Double) valueType_));
        }
        if (valueTypeCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(
                3, (long)((java.lang.Long) valueType_));
        }
        if (valueTypeCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(
                4, (long)((java.lang.Long) valueType_));
        }
        if (valueTypeCase_ == 5) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(
                5, (boolean)((java.lang.Boolean) valueType_));
        }
        if (valueTypeCase_ == 6) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, valueType_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.maptalks.benchmark.geo.Geobuf.Data.Value)) {
          return super.equals(obj);
        }
        org.maptalks.benchmark.geo.Geobuf.Data.Value other = (org.maptalks.benchmark.geo.Geobuf.Data.Value) obj;

        boolean result = true;
        result = result && getValueTypeCase().equals(
            other.getValueTypeCase());
        if (!result) return false;
        switch (valueTypeCase_) {
          case 1:
            result = result && getStringValue()
                .equals(other.getStringValue());
            break;
          case 2:
            result = result && (
                java.lang.Double.doubleToLongBits(getDoubleValue())
                == java.lang.Double.doubleToLongBits(
                    other.getDoubleValue()));
            break;
          case 3:
            result = result && (getPosIntValue()
                == other.getPosIntValue());
            break;
          case 4:
            result = result && (getNegIntValue()
                == other.getNegIntValue());
            break;
          case 5:
            result = result && (getBoolValue()
                == other.getBoolValue());
            break;
          case 6:
            result = result && getJsonValue()
                .equals(other.getJsonValue());
            break;
          case 0:
          default:
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        switch (valueTypeCase_) {
          case 1:
            hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getStringValue().hashCode();
            break;
          case 2:
            hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getDoubleValue()));
            break;
          case 3:
            hash = (37 * hash) + POS_INT_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getPosIntValue());
            break;
          case 4:
            hash = (37 * hash) + NEG_INT_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getNegIntValue());
            break;
          case 5:
            hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getBoolValue());
            break;
          case 6:
            hash = (37 * hash) + JSON_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getJsonValue().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.maptalks.benchmark.geo.Geobuf.Data.Value parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.maptalks.benchmark.geo.Geobuf.Data.Value prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Data.Value}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Data.Value)
          org.maptalks.benchmark.geo.Geobuf.Data.ValueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Value_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Value_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.maptalks.benchmark.geo.Geobuf.Data.Value.class, org.maptalks.benchmark.geo.Geobuf.Data.Value.Builder.class);
        }

        // Construct using org.maptalks.benchmark.geo.Geobuf.Data.Value.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          valueTypeCase_ = 0;
          valueType_ = null;
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_Value_descriptor;
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.Value getDefaultInstanceForType() {
          return org.maptalks.benchmark.geo.Geobuf.Data.Value.getDefaultInstance();
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.Value build() {
          org.maptalks.benchmark.geo.Geobuf.Data.Value result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.maptalks.benchmark.geo.Geobuf.Data.Value buildPartial() {
          org.maptalks.benchmark.geo.Geobuf.Data.Value result = new org.maptalks.benchmark.geo.Geobuf.Data.Value(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (valueTypeCase_ == 1) {
            result.valueType_ = valueType_;
          }
          if (valueTypeCase_ == 2) {
            result.valueType_ = valueType_;
          }
          if (valueTypeCase_ == 3) {
            result.valueType_ = valueType_;
          }
          if (valueTypeCase_ == 4) {
            result.valueType_ = valueType_;
          }
          if (valueTypeCase_ == 5) {
            result.valueType_ = valueType_;
          }
          if (valueTypeCase_ == 6) {
            result.valueType_ = valueType_;
          }
          result.bitField0_ = to_bitField0_;
          result.valueTypeCase_ = valueTypeCase_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.maptalks.benchmark.geo.Geobuf.Data.Value) {
            return mergeFrom((org.maptalks.benchmark.geo.Geobuf.Data.Value)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.maptalks.benchmark.geo.Geobuf.Data.Value other) {
          if (other == org.maptalks.benchmark.geo.Geobuf.Data.Value.getDefaultInstance()) return this;
          switch (other.getValueTypeCase()) {
            case STRING_VALUE: {
              valueTypeCase_ = 1;
              valueType_ = other.valueType_;
              onChanged();
              break;
            }
            case DOUBLE_VALUE: {
              setDoubleValue(other.getDoubleValue());
              break;
            }
            case POS_INT_VALUE: {
              setPosIntValue(other.getPosIntValue());
              break;
            }
            case NEG_INT_VALUE: {
              setNegIntValue(other.getNegIntValue());
              break;
            }
            case BOOL_VALUE: {
              setBoolValue(other.getBoolValue());
              break;
            }
            case JSON_VALUE: {
              valueTypeCase_ = 6;
              valueType_ = other.valueType_;
              onChanged();
              break;
            }
            case VALUETYPE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.maptalks.benchmark.geo.Geobuf.Data.Value parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.maptalks.benchmark.geo.Geobuf.Data.Value) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int valueTypeCase_ = 0;
        private java.lang.Object valueType_;
        public ValueTypeCase
            getValueTypeCase() {
          return ValueTypeCase.forNumber(
              valueTypeCase_);
        }

        public Builder clearValueType() {
          valueTypeCase_ = 0;
          valueType_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        /**
         * <code>optional string string_value = 1;</code>
         */
        public boolean hasStringValue() {
          return valueTypeCase_ == 1;
        }
        /**
         * <code>optional string string_value = 1;</code>
         */
        public java.lang.String getStringValue() {
          java.lang.Object ref = "";
          if (valueTypeCase_ == 1) {
            ref = valueType_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (valueTypeCase_ == 1) {
              if (bs.isValidUtf8()) {
                valueType_ = s;
              }
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string string_value = 1;</code>
         */
        public com.google.protobuf.ByteString
            getStringValueBytes() {
          java.lang.Object ref = "";
          if (valueTypeCase_ == 1) {
            ref = valueType_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (valueTypeCase_ == 1) {
              valueType_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string string_value = 1;</code>
         */
        public Builder setStringValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  valueTypeCase_ = 1;
          valueType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string string_value = 1;</code>
         */
        public Builder clearStringValue() {
          if (valueTypeCase_ == 1) {
            valueTypeCase_ = 0;
            valueType_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional string string_value = 1;</code>
         */
        public Builder setStringValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  valueTypeCase_ = 1;
          valueType_ = value;
          onChanged();
          return this;
        }

        /**
         * <code>optional double double_value = 2;</code>
         */
        public boolean hasDoubleValue() {
          return valueTypeCase_ == 2;
        }
        /**
         * <code>optional double double_value = 2;</code>
         */
        public double getDoubleValue() {
          if (valueTypeCase_ == 2) {
            return (java.lang.Double) valueType_;
          }
          return 0D;
        }
        /**
         * <code>optional double double_value = 2;</code>
         */
        public Builder setDoubleValue(double value) {
          valueTypeCase_ = 2;
          valueType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double double_value = 2;</code>
         */
        public Builder clearDoubleValue() {
          if (valueTypeCase_ == 2) {
            valueTypeCase_ = 0;
            valueType_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>optional uint64 pos_int_value = 3;</code>
         */
        public boolean hasPosIntValue() {
          return valueTypeCase_ == 3;
        }
        /**
         * <code>optional uint64 pos_int_value = 3;</code>
         */
        public long getPosIntValue() {
          if (valueTypeCase_ == 3) {
            return (java.lang.Long) valueType_;
          }
          return 0L;
        }
        /**
         * <code>optional uint64 pos_int_value = 3;</code>
         */
        public Builder setPosIntValue(long value) {
          valueTypeCase_ = 3;
          valueType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 pos_int_value = 3;</code>
         */
        public Builder clearPosIntValue() {
          if (valueTypeCase_ == 3) {
            valueTypeCase_ = 0;
            valueType_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>optional uint64 neg_int_value = 4;</code>
         */
        public boolean hasNegIntValue() {
          return valueTypeCase_ == 4;
        }
        /**
         * <code>optional uint64 neg_int_value = 4;</code>
         */
        public long getNegIntValue() {
          if (valueTypeCase_ == 4) {
            return (java.lang.Long) valueType_;
          }
          return 0L;
        }
        /**
         * <code>optional uint64 neg_int_value = 4;</code>
         */
        public Builder setNegIntValue(long value) {
          valueTypeCase_ = 4;
          valueType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 neg_int_value = 4;</code>
         */
        public Builder clearNegIntValue() {
          if (valueTypeCase_ == 4) {
            valueTypeCase_ = 0;
            valueType_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>optional bool bool_value = 5;</code>
         */
        public boolean hasBoolValue() {
          return valueTypeCase_ == 5;
        }
        /**
         * <code>optional bool bool_value = 5;</code>
         */
        public boolean getBoolValue() {
          if (valueTypeCase_ == 5) {
            return (java.lang.Boolean) valueType_;
          }
          return false;
        }
        /**
         * <code>optional bool bool_value = 5;</code>
         */
        public Builder setBoolValue(boolean value) {
          valueTypeCase_ = 5;
          valueType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool bool_value = 5;</code>
         */
        public Builder clearBoolValue() {
          if (valueTypeCase_ == 5) {
            valueTypeCase_ = 0;
            valueType_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <code>optional string json_value = 6;</code>
         */
        public boolean hasJsonValue() {
          return valueTypeCase_ == 6;
        }
        /**
         * <code>optional string json_value = 6;</code>
         */
        public java.lang.String getJsonValue() {
          java.lang.Object ref = "";
          if (valueTypeCase_ == 6) {
            ref = valueType_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (valueTypeCase_ == 6) {
              if (bs.isValidUtf8()) {
                valueType_ = s;
              }
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string json_value = 6;</code>
         */
        public com.google.protobuf.ByteString
            getJsonValueBytes() {
          java.lang.Object ref = "";
          if (valueTypeCase_ == 6) {
            ref = valueType_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (valueTypeCase_ == 6) {
              valueType_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string json_value = 6;</code>
         */
        public Builder setJsonValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  valueTypeCase_ = 6;
          valueType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string json_value = 6;</code>
         */
        public Builder clearJsonValue() {
          if (valueTypeCase_ == 6) {
            valueTypeCase_ = 0;
            valueType_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional string json_value = 6;</code>
         */
        public Builder setJsonValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  valueTypeCase_ = 6;
          valueType_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Data.Value)
      }

      // @@protoc_insertion_point(class_scope:Data.Value)
      private static final org.maptalks.benchmark.geo.Geobuf.Data.Value DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.maptalks.benchmark.geo.Geobuf.Data.Value();
      }

      public static org.maptalks.benchmark.geo.Geobuf.Data.Value getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Value>
          PARSER = new com.google.protobuf.AbstractParser<Value>() {
        public Value parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Value(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Value> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Value> getParserForType() {
        return PARSER;
      }

      public org.maptalks.benchmark.geo.Geobuf.Data.Value getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int dataTypeCase_ = 0;
    private java.lang.Object dataType_;
    public enum DataTypeCase
        implements com.google.protobuf.Internal.EnumLite {
      FEATURE_COLLECTION(4),
      FEATURE(5),
      GEOMETRY(6),
      DATATYPE_NOT_SET(0);
      private final int value;
      private DataTypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataTypeCase forNumber(int value) {
        switch (value) {
          case 4: return FEATURE_COLLECTION;
          case 5: return FEATURE;
          case 6: return GEOMETRY;
          case 0: return DATATYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataTypeCase
    getDataTypeCase() {
      return DataTypeCase.forNumber(
          dataTypeCase_);
    }

    public static final int KEYS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList keys_;
    /**
     * <pre>
     * global arrays of unique keys
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * global arrays of unique keys
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * global arrays of unique keys
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     */
    public java.lang.String getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * global arrays of unique keys
     * </pre>
     *
     * <code>repeated string keys = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeysBytes(int index) {
      return keys_.getByteString(index);
    }

    public static final int DIMENSIONS_FIELD_NUMBER = 2;
    private int dimensions_;
    /**
     * <pre>
     * max coordinate dimensions
     * </pre>
     *
     * <code>optional uint32 dimensions = 2 [default = 2];</code>
     */
    public boolean hasDimensions() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * max coordinate dimensions
     * </pre>
     *
     * <code>optional uint32 dimensions = 2 [default = 2];</code>
     */
    public int getDimensions() {
      return dimensions_;
    }

    public static final int PRECISION_FIELD_NUMBER = 3;
    private int precision_;
    /**
     * <pre>
     * number of digits after decimal point for coordinates
     * </pre>
     *
     * <code>optional uint32 precision = 3 [default = 6];</code>
     */
    public boolean hasPrecision() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * number of digits after decimal point for coordinates
     * </pre>
     *
     * <code>optional uint32 precision = 3 [default = 6];</code>
     */
    public int getPrecision() {
      return precision_;
    }

    public static final int FEATURE_COLLECTION_FIELD_NUMBER = 4;
    /**
     * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
     */
    public boolean hasFeatureCollection() {
      return dataTypeCase_ == 4;
    }
    /**
     * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
     */
    public org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection getFeatureCollection() {
      if (dataTypeCase_ == 4) {
         return (org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_;
      }
      return org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.getDefaultInstance();
    }
    /**
     * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
     */
    public org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollectionOrBuilder getFeatureCollectionOrBuilder() {
      if (dataTypeCase_ == 4) {
         return (org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_;
      }
      return org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.getDefaultInstance();
    }

    public static final int FEATURE_FIELD_NUMBER = 5;
    /**
     * <code>optional .Data.Feature feature = 5;</code>
     */
    public boolean hasFeature() {
      return dataTypeCase_ == 5;
    }
    /**
     * <code>optional .Data.Feature feature = 5;</code>
     */
    public org.maptalks.benchmark.geo.Geobuf.Data.Feature getFeature() {
      if (dataTypeCase_ == 5) {
         return (org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_;
      }
      return org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance();
    }
    /**
     * <code>optional .Data.Feature feature = 5;</code>
     */
    public org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder getFeatureOrBuilder() {
      if (dataTypeCase_ == 5) {
         return (org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_;
      }
      return org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance();
    }

    public static final int GEOMETRY_FIELD_NUMBER = 6;
    /**
     * <code>optional .Data.Geometry geometry = 6;</code>
     */
    public boolean hasGeometry() {
      return dataTypeCase_ == 6;
    }
    /**
     * <code>optional .Data.Geometry geometry = 6;</code>
     */
    public org.maptalks.benchmark.geo.Geobuf.Data.Geometry getGeometry() {
      if (dataTypeCase_ == 6) {
         return (org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_;
      }
      return org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance();
    }
    /**
     * <code>optional .Data.Geometry geometry = 6;</code>
     */
    public org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder getGeometryOrBuilder() {
      if (dataTypeCase_ == 6) {
         return (org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_;
      }
      return org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasFeatureCollection()) {
        if (!getFeatureCollection().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasFeature()) {
        if (!getFeature().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGeometry()) {
        if (!getGeometry().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keys_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keys_.getRaw(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, dimensions_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, precision_);
      }
      if (dataTypeCase_ == 4) {
        output.writeMessage(4, (org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_);
      }
      if (dataTypeCase_ == 5) {
        output.writeMessage(5, (org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_);
      }
      if (dataTypeCase_ == 6) {
        output.writeMessage(6, (org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += computeStringSizeNoTag(keys_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, dimensions_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, precision_);
      }
      if (dataTypeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_);
      }
      if (dataTypeCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_);
      }
      if (dataTypeCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.maptalks.benchmark.geo.Geobuf.Data)) {
        return super.equals(obj);
      }
      org.maptalks.benchmark.geo.Geobuf.Data other = (org.maptalks.benchmark.geo.Geobuf.Data) obj;

      boolean result = true;
      result = result && getKeysList()
          .equals(other.getKeysList());
      result = result && (hasDimensions() == other.hasDimensions());
      if (hasDimensions()) {
        result = result && (getDimensions()
            == other.getDimensions());
      }
      result = result && (hasPrecision() == other.hasPrecision());
      if (hasPrecision()) {
        result = result && (getPrecision()
            == other.getPrecision());
      }
      result = result && getDataTypeCase().equals(
          other.getDataTypeCase());
      if (!result) return false;
      switch (dataTypeCase_) {
        case 4:
          result = result && getFeatureCollection()
              .equals(other.getFeatureCollection());
          break;
        case 5:
          result = result && getFeature()
              .equals(other.getFeature());
          break;
        case 6:
          result = result && getGeometry()
              .equals(other.getGeometry());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      if (hasDimensions()) {
        hash = (37 * hash) + DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDimensions();
      }
      if (hasPrecision()) {
        hash = (37 * hash) + PRECISION_FIELD_NUMBER;
        hash = (53 * hash) + getPrecision();
      }
      switch (dataTypeCase_) {
        case 4:
          hash = (37 * hash) + FEATURE_COLLECTION_FIELD_NUMBER;
          hash = (53 * hash) + getFeatureCollection().hashCode();
          break;
        case 5:
          hash = (37 * hash) + FEATURE_FIELD_NUMBER;
          hash = (53 * hash) + getFeature().hashCode();
          break;
        case 6:
          hash = (37 * hash) + GEOMETRY_FIELD_NUMBER;
          hash = (53 * hash) + getGeometry().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.maptalks.benchmark.geo.Geobuf.Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.maptalks.benchmark.geo.Geobuf.Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.maptalks.benchmark.geo.Geobuf.Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.maptalks.benchmark.geo.Geobuf.Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.maptalks.benchmark.geo.Geobuf.Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.maptalks.benchmark.geo.Geobuf.Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.maptalks.benchmark.geo.Geobuf.Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.maptalks.benchmark.geo.Geobuf.Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.maptalks.benchmark.geo.Geobuf.Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.maptalks.benchmark.geo.Geobuf.Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.maptalks.benchmark.geo.Geobuf.Data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Data)
        org.maptalks.benchmark.geo.Geobuf.DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.maptalks.benchmark.geo.Geobuf.Data.class, org.maptalks.benchmark.geo.Geobuf.Data.Builder.class);
      }

      // Construct using org.maptalks.benchmark.geo.Geobuf.Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        dimensions_ = 2;
        bitField0_ = (bitField0_ & ~0x00000002);
        precision_ = 6;
        bitField0_ = (bitField0_ & ~0x00000004);
        dataTypeCase_ = 0;
        dataType_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.maptalks.benchmark.geo.Geobuf.internal_static_Data_descriptor;
      }

      public org.maptalks.benchmark.geo.Geobuf.Data getDefaultInstanceForType() {
        return org.maptalks.benchmark.geo.Geobuf.Data.getDefaultInstance();
      }

      public org.maptalks.benchmark.geo.Geobuf.Data build() {
        org.maptalks.benchmark.geo.Geobuf.Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.maptalks.benchmark.geo.Geobuf.Data buildPartial() {
        org.maptalks.benchmark.geo.Geobuf.Data result = new org.maptalks.benchmark.geo.Geobuf.Data(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          keys_ = keys_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keys_ = keys_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dimensions_ = dimensions_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.precision_ = precision_;
        if (dataTypeCase_ == 4) {
          if (featureCollectionBuilder_ == null) {
            result.dataType_ = dataType_;
          } else {
            result.dataType_ = featureCollectionBuilder_.build();
          }
        }
        if (dataTypeCase_ == 5) {
          if (featureBuilder_ == null) {
            result.dataType_ = dataType_;
          } else {
            result.dataType_ = featureBuilder_.build();
          }
        }
        if (dataTypeCase_ == 6) {
          if (geometryBuilder_ == null) {
            result.dataType_ = dataType_;
          } else {
            result.dataType_ = geometryBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.dataTypeCase_ = dataTypeCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.maptalks.benchmark.geo.Geobuf.Data) {
          return mergeFrom((org.maptalks.benchmark.geo.Geobuf.Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.maptalks.benchmark.geo.Geobuf.Data other) {
        if (other == org.maptalks.benchmark.geo.Geobuf.Data.getDefaultInstance()) return this;
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        if (other.hasDimensions()) {
          setDimensions(other.getDimensions());
        }
        if (other.hasPrecision()) {
          setPrecision(other.getPrecision());
        }
        switch (other.getDataTypeCase()) {
          case FEATURE_COLLECTION: {
            mergeFeatureCollection(other.getFeatureCollection());
            break;
          }
          case FEATURE: {
            mergeFeature(other.getFeature());
            break;
          }
          case GEOMETRY: {
            mergeGeometry(other.getGeometry());
            break;
          }
          case DATATYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasFeatureCollection()) {
          if (!getFeatureCollection().isInitialized()) {
            return false;
          }
        }
        if (hasFeature()) {
          if (!getFeature().isInitialized()) {
            return false;
          }
        }
        if (hasGeometry()) {
          if (!getGeometry().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.maptalks.benchmark.geo.Geobuf.Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.maptalks.benchmark.geo.Geobuf.Data) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataTypeCase_ = 0;
      private java.lang.Object dataType_;
      public DataTypeCase
          getDataTypeCase() {
        return DataTypeCase.forNumber(
            dataTypeCase_);
      }

      public Builder clearDataType() {
        dataTypeCase_ = 0;
        dataType_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * global arrays of unique keys
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getKeysList() {
        return keys_.getUnmodifiableView();
      }
      /**
       * <pre>
       * global arrays of unique keys
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <pre>
       * global arrays of unique keys
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       */
      public java.lang.String getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <pre>
       * global arrays of unique keys
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeysBytes(int index) {
        return keys_.getByteString(index);
      }
      /**
       * <pre>
       * global arrays of unique keys
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       */
      public Builder setKeys(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * global arrays of unique keys
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       */
      public Builder addKeys(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * global arrays of unique keys
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * global arrays of unique keys
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       */
      public Builder clearKeys() {
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * global arrays of unique keys
       * </pre>
       *
       * <code>repeated string keys = 1;</code>
       */
      public Builder addKeysBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }

      private int dimensions_ = 2;
      /**
       * <pre>
       * max coordinate dimensions
       * </pre>
       *
       * <code>optional uint32 dimensions = 2 [default = 2];</code>
       */
      public boolean hasDimensions() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * max coordinate dimensions
       * </pre>
       *
       * <code>optional uint32 dimensions = 2 [default = 2];</code>
       */
      public int getDimensions() {
        return dimensions_;
      }
      /**
       * <pre>
       * max coordinate dimensions
       * </pre>
       *
       * <code>optional uint32 dimensions = 2 [default = 2];</code>
       */
      public Builder setDimensions(int value) {
        bitField0_ |= 0x00000002;
        dimensions_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * max coordinate dimensions
       * </pre>
       *
       * <code>optional uint32 dimensions = 2 [default = 2];</code>
       */
      public Builder clearDimensions() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dimensions_ = 2;
        onChanged();
        return this;
      }

      private int precision_ = 6;
      /**
       * <pre>
       * number of digits after decimal point for coordinates
       * </pre>
       *
       * <code>optional uint32 precision = 3 [default = 6];</code>
       */
      public boolean hasPrecision() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * number of digits after decimal point for coordinates
       * </pre>
       *
       * <code>optional uint32 precision = 3 [default = 6];</code>
       */
      public int getPrecision() {
        return precision_;
      }
      /**
       * <pre>
       * number of digits after decimal point for coordinates
       * </pre>
       *
       * <code>optional uint32 precision = 3 [default = 6];</code>
       */
      public Builder setPrecision(int value) {
        bitField0_ |= 0x00000004;
        precision_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * number of digits after decimal point for coordinates
       * </pre>
       *
       * <code>optional uint32 precision = 3 [default = 6];</code>
       */
      public Builder clearPrecision() {
        bitField0_ = (bitField0_ & ~0x00000004);
        precision_ = 6;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection, org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.Builder, org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollectionOrBuilder> featureCollectionBuilder_;
      /**
       * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
       */
      public boolean hasFeatureCollection() {
        return dataTypeCase_ == 4;
      }
      /**
       * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection getFeatureCollection() {
        if (featureCollectionBuilder_ == null) {
          if (dataTypeCase_ == 4) {
            return (org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_;
          }
          return org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.getDefaultInstance();
        } else {
          if (dataTypeCase_ == 4) {
            return featureCollectionBuilder_.getMessage();
          }
          return org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
       */
      public Builder setFeatureCollection(org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection value) {
        if (featureCollectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataType_ = value;
          onChanged();
        } else {
          featureCollectionBuilder_.setMessage(value);
        }
        dataTypeCase_ = 4;
        return this;
      }
      /**
       * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
       */
      public Builder setFeatureCollection(
          org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.Builder builderForValue) {
        if (featureCollectionBuilder_ == null) {
          dataType_ = builderForValue.build();
          onChanged();
        } else {
          featureCollectionBuilder_.setMessage(builderForValue.build());
        }
        dataTypeCase_ = 4;
        return this;
      }
      /**
       * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
       */
      public Builder mergeFeatureCollection(org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection value) {
        if (featureCollectionBuilder_ == null) {
          if (dataTypeCase_ == 4 &&
              dataType_ != org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.getDefaultInstance()) {
            dataType_ = org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.newBuilder((org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_)
                .mergeFrom(value).buildPartial();
          } else {
            dataType_ = value;
          }
          onChanged();
        } else {
          if (dataTypeCase_ == 4) {
            featureCollectionBuilder_.mergeFrom(value);
          }
          featureCollectionBuilder_.setMessage(value);
        }
        dataTypeCase_ = 4;
        return this;
      }
      /**
       * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
       */
      public Builder clearFeatureCollection() {
        if (featureCollectionBuilder_ == null) {
          if (dataTypeCase_ == 4) {
            dataTypeCase_ = 0;
            dataType_ = null;
            onChanged();
          }
        } else {
          if (dataTypeCase_ == 4) {
            dataTypeCase_ = 0;
            dataType_ = null;
          }
          featureCollectionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.Builder getFeatureCollectionBuilder() {
        return getFeatureCollectionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollectionOrBuilder getFeatureCollectionOrBuilder() {
        if ((dataTypeCase_ == 4) && (featureCollectionBuilder_ != null)) {
          return featureCollectionBuilder_.getMessageOrBuilder();
        } else {
          if (dataTypeCase_ == 4) {
            return (org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_;
          }
          return org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Data.FeatureCollection feature_collection = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection, org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.Builder, org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollectionOrBuilder> 
          getFeatureCollectionFieldBuilder() {
        if (featureCollectionBuilder_ == null) {
          if (!(dataTypeCase_ == 4)) {
            dataType_ = org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.getDefaultInstance();
          }
          featureCollectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection, org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection.Builder, org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollectionOrBuilder>(
                  (org.maptalks.benchmark.geo.Geobuf.Data.FeatureCollection) dataType_,
                  getParentForChildren(),
                  isClean());
          dataType_ = null;
        }
        dataTypeCase_ = 4;
        onChanged();;
        return featureCollectionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.maptalks.benchmark.geo.Geobuf.Data.Feature, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder, org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder> featureBuilder_;
      /**
       * <code>optional .Data.Feature feature = 5;</code>
       */
      public boolean hasFeature() {
        return dataTypeCase_ == 5;
      }
      /**
       * <code>optional .Data.Feature feature = 5;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Feature getFeature() {
        if (featureBuilder_ == null) {
          if (dataTypeCase_ == 5) {
            return (org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_;
          }
          return org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance();
        } else {
          if (dataTypeCase_ == 5) {
            return featureBuilder_.getMessage();
          }
          return org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Data.Feature feature = 5;</code>
       */
      public Builder setFeature(org.maptalks.benchmark.geo.Geobuf.Data.Feature value) {
        if (featureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataType_ = value;
          onChanged();
        } else {
          featureBuilder_.setMessage(value);
        }
        dataTypeCase_ = 5;
        return this;
      }
      /**
       * <code>optional .Data.Feature feature = 5;</code>
       */
      public Builder setFeature(
          org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder builderForValue) {
        if (featureBuilder_ == null) {
          dataType_ = builderForValue.build();
          onChanged();
        } else {
          featureBuilder_.setMessage(builderForValue.build());
        }
        dataTypeCase_ = 5;
        return this;
      }
      /**
       * <code>optional .Data.Feature feature = 5;</code>
       */
      public Builder mergeFeature(org.maptalks.benchmark.geo.Geobuf.Data.Feature value) {
        if (featureBuilder_ == null) {
          if (dataTypeCase_ == 5 &&
              dataType_ != org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance()) {
            dataType_ = org.maptalks.benchmark.geo.Geobuf.Data.Feature.newBuilder((org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_)
                .mergeFrom(value).buildPartial();
          } else {
            dataType_ = value;
          }
          onChanged();
        } else {
          if (dataTypeCase_ == 5) {
            featureBuilder_.mergeFrom(value);
          }
          featureBuilder_.setMessage(value);
        }
        dataTypeCase_ = 5;
        return this;
      }
      /**
       * <code>optional .Data.Feature feature = 5;</code>
       */
      public Builder clearFeature() {
        if (featureBuilder_ == null) {
          if (dataTypeCase_ == 5) {
            dataTypeCase_ = 0;
            dataType_ = null;
            onChanged();
          }
        } else {
          if (dataTypeCase_ == 5) {
            dataTypeCase_ = 0;
            dataType_ = null;
          }
          featureBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .Data.Feature feature = 5;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder getFeatureBuilder() {
        return getFeatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Data.Feature feature = 5;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder getFeatureOrBuilder() {
        if ((dataTypeCase_ == 5) && (featureBuilder_ != null)) {
          return featureBuilder_.getMessageOrBuilder();
        } else {
          if (dataTypeCase_ == 5) {
            return (org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_;
          }
          return org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Data.Feature feature = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.maptalks.benchmark.geo.Geobuf.Data.Feature, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder, org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder> 
          getFeatureFieldBuilder() {
        if (featureBuilder_ == null) {
          if (!(dataTypeCase_ == 5)) {
            dataType_ = org.maptalks.benchmark.geo.Geobuf.Data.Feature.getDefaultInstance();
          }
          featureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.maptalks.benchmark.geo.Geobuf.Data.Feature, org.maptalks.benchmark.geo.Geobuf.Data.Feature.Builder, org.maptalks.benchmark.geo.Geobuf.Data.FeatureOrBuilder>(
                  (org.maptalks.benchmark.geo.Geobuf.Data.Feature) dataType_,
                  getParentForChildren(),
                  isClean());
          dataType_ = null;
        }
        dataTypeCase_ = 5;
        onChanged();;
        return featureBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.maptalks.benchmark.geo.Geobuf.Data.Geometry, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder, org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder> geometryBuilder_;
      /**
       * <code>optional .Data.Geometry geometry = 6;</code>
       */
      public boolean hasGeometry() {
        return dataTypeCase_ == 6;
      }
      /**
       * <code>optional .Data.Geometry geometry = 6;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Geometry getGeometry() {
        if (geometryBuilder_ == null) {
          if (dataTypeCase_ == 6) {
            return (org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_;
          }
          return org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance();
        } else {
          if (dataTypeCase_ == 6) {
            return geometryBuilder_.getMessage();
          }
          return org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Data.Geometry geometry = 6;</code>
       */
      public Builder setGeometry(org.maptalks.benchmark.geo.Geobuf.Data.Geometry value) {
        if (geometryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataType_ = value;
          onChanged();
        } else {
          geometryBuilder_.setMessage(value);
        }
        dataTypeCase_ = 6;
        return this;
      }
      /**
       * <code>optional .Data.Geometry geometry = 6;</code>
       */
      public Builder setGeometry(
          org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder builderForValue) {
        if (geometryBuilder_ == null) {
          dataType_ = builderForValue.build();
          onChanged();
        } else {
          geometryBuilder_.setMessage(builderForValue.build());
        }
        dataTypeCase_ = 6;
        return this;
      }
      /**
       * <code>optional .Data.Geometry geometry = 6;</code>
       */
      public Builder mergeGeometry(org.maptalks.benchmark.geo.Geobuf.Data.Geometry value) {
        if (geometryBuilder_ == null) {
          if (dataTypeCase_ == 6 &&
              dataType_ != org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance()) {
            dataType_ = org.maptalks.benchmark.geo.Geobuf.Data.Geometry.newBuilder((org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_)
                .mergeFrom(value).buildPartial();
          } else {
            dataType_ = value;
          }
          onChanged();
        } else {
          if (dataTypeCase_ == 6) {
            geometryBuilder_.mergeFrom(value);
          }
          geometryBuilder_.setMessage(value);
        }
        dataTypeCase_ = 6;
        return this;
      }
      /**
       * <code>optional .Data.Geometry geometry = 6;</code>
       */
      public Builder clearGeometry() {
        if (geometryBuilder_ == null) {
          if (dataTypeCase_ == 6) {
            dataTypeCase_ = 0;
            dataType_ = null;
            onChanged();
          }
        } else {
          if (dataTypeCase_ == 6) {
            dataTypeCase_ = 0;
            dataType_ = null;
          }
          geometryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .Data.Geometry geometry = 6;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder getGeometryBuilder() {
        return getGeometryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Data.Geometry geometry = 6;</code>
       */
      public org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder getGeometryOrBuilder() {
        if ((dataTypeCase_ == 6) && (geometryBuilder_ != null)) {
          return geometryBuilder_.getMessageOrBuilder();
        } else {
          if (dataTypeCase_ == 6) {
            return (org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_;
          }
          return org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Data.Geometry geometry = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.maptalks.benchmark.geo.Geobuf.Data.Geometry, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder, org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder> 
          getGeometryFieldBuilder() {
        if (geometryBuilder_ == null) {
          if (!(dataTypeCase_ == 6)) {
            dataType_ = org.maptalks.benchmark.geo.Geobuf.Data.Geometry.getDefaultInstance();
          }
          geometryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.maptalks.benchmark.geo.Geobuf.Data.Geometry, org.maptalks.benchmark.geo.Geobuf.Data.Geometry.Builder, org.maptalks.benchmark.geo.Geobuf.Data.GeometryOrBuilder>(
                  (org.maptalks.benchmark.geo.Geobuf.Data.Geometry) dataType_,
                  getParentForChildren(),
                  isClean());
          dataType_ = null;
        }
        dataTypeCase_ = 6;
        onChanged();;
        return geometryBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Data)
    }

    // @@protoc_insertion_point(class_scope:Data)
    private static final org.maptalks.benchmark.geo.Geobuf.Data DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.maptalks.benchmark.geo.Geobuf.Data();
    }

    public static org.maptalks.benchmark.geo.Geobuf.Data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Data>
        PARSER = new com.google.protobuf.AbstractParser<Data>() {
      public Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Data(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Data> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Data> getParserForType() {
      return PARSER;
    }

    public org.maptalks.benchmark.geo.Geobuf.Data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_Feature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_Feature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_Geometry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_Geometry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_FeatureCollection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_FeatureCollection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_Value_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_Value_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014geobuf.proto\"\310\007\n\004Data\022\014\n\004keys\030\001 \003(\t\022\025\n" +
      "\ndimensions\030\002 \001(\r:\0012\022\024\n\tprecision\030\003 \001(\r:" +
      "\0016\0225\n\022feature_collection\030\004 \001(\0132\027.Data.Fe" +
      "atureCollectionH\000\022 \n\007feature\030\005 \001(\0132\r.Dat" +
      "a.FeatureH\000\022\"\n\010geometry\030\006 \001(\0132\016.Data.Geo" +
      "metryH\000\032\252\001\n\007Feature\022 \n\010geometry\030\001 \002(\0132\016." +
      "Data.Geometry\022\014\n\002id\030\013 \001(\tH\000\022\020\n\006int_id\030\014 " +
      "\001(\022H\000\022\033\n\006values\030\r \003(\0132\013.Data.Value\022\026\n\npr" +
      "operties\030\016 \003(\rB\002\020\001\022\035\n\021custom_properties\030" +
      "\017 \003(\rB\002\020\001B\t\n\007id_type\032\265\002\n\010Geometry\022!\n\004typ",
      "e\030\001 \002(\0162\023.Data.Geometry.Type\022\023\n\007lengths\030" +
      "\002 \003(\rB\002\020\001\022\022\n\006coords\030\003 \003(\022B\002\020\001\022\"\n\ngeometr" +
      "ies\030\004 \003(\0132\016.Data.Geometry\022\033\n\006values\030\r \003(" +
      "\0132\013.Data.Value\022\035\n\021custom_properties\030\017 \003(" +
      "\rB\002\020\001\"}\n\004Type\022\t\n\005POINT\020\000\022\016\n\nMULTIPOINT\020\001" +
      "\022\016\n\nLINESTRING\020\002\022\023\n\017MULTILINESTRING\020\003\022\013\n" +
      "\007POLYGON\020\004\022\020\n\014MULTIPOLYGON\020\005\022\026\n\022GEOMETRY" +
      "COLLECTION\020\006\032p\n\021FeatureCollection\022\037\n\010fea" +
      "tures\030\001 \003(\0132\r.Data.Feature\022\033\n\006values\030\r \003" +
      "(\0132\013.Data.Value\022\035\n\021custom_properties\030\017 \003",
      "(\rB\002\020\001\032\243\001\n\005Value\022\026\n\014string_value\030\001 \001(\tH\000" +
      "\022\026\n\014double_value\030\002 \001(\001H\000\022\027\n\rpos_int_valu" +
      "e\030\003 \001(\004H\000\022\027\n\rneg_int_value\030\004 \001(\004H\000\022\024\n\nbo" +
      "ol_value\030\005 \001(\010H\000\022\024\n\njson_value\030\006 \001(\tH\000B\014" +
      "\n\nvalue_typeB\013\n\tdata_typeB\034\n\032org.maptalk" +
      "s.benchmark.geo"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Data_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_descriptor,
        new java.lang.String[] { "Keys", "Dimensions", "Precision", "FeatureCollection", "Feature", "Geometry", "DataType", });
    internal_static_Data_Feature_descriptor =
      internal_static_Data_descriptor.getNestedTypes().get(0);
    internal_static_Data_Feature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_Feature_descriptor,
        new java.lang.String[] { "Geometry", "Id", "IntId", "Values", "Properties", "CustomProperties", "IdType", });
    internal_static_Data_Geometry_descriptor =
      internal_static_Data_descriptor.getNestedTypes().get(1);
    internal_static_Data_Geometry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_Geometry_descriptor,
        new java.lang.String[] { "Type", "Lengths", "Coords", "Geometries", "Values", "CustomProperties", });
    internal_static_Data_FeatureCollection_descriptor =
      internal_static_Data_descriptor.getNestedTypes().get(2);
    internal_static_Data_FeatureCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_FeatureCollection_descriptor,
        new java.lang.String[] { "Features", "Values", "CustomProperties", });
    internal_static_Data_Value_descriptor =
      internal_static_Data_descriptor.getNestedTypes().get(3);
    internal_static_Data_Value_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_Value_descriptor,
        new java.lang.String[] { "StringValue", "DoubleValue", "PosIntValue", "NegIntValue", "BoolValue", "JsonValue", "ValueType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
